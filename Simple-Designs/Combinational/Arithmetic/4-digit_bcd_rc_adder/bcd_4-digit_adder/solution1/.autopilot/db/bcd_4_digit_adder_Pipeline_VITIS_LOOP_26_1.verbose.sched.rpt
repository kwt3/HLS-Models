

================================================================
== Vitis HLS Report for 'bcd_4_digit_adder_Pipeline_VITIS_LOOP_26_1'
================================================================
* Date:           Mon Apr  1 07:33:38 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        bcd_4-digit_adder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.526 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_26_1  |        3|        3|         1|          1|          1|     3|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%cout_tmp_3_015 = alloca i32 1"   --->   Operation 4 'alloca' 'cout_tmp_3_015' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->bcd_4_digit_adder.cpp:27]   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%b_load_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %b_load"   --->   Operation 7 'read' 'b_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%a_load_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %a_load"   --->   Operation 8 'read' 'a_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%or_ln_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %or_ln"   --->   Operation 9 'read' 'or_ln_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%icmp_ln8_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %icmp_ln8"   --->   Operation 10 'read' 'icmp_ln8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.46ns)   --->   "%store_ln0 = store i128 %or_ln_read, i128 %empty"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 12 [1/1] (0.46ns)   --->   "%store_ln55 = store i3 1, i3 %i" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->bcd_4_digit_adder.cpp:27]   --->   Operation 12 'store' 'store_ln55' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 13 [1/1] (0.46ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 5.52>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%cin_assign = phi i1 %icmp_ln8_read, void %newFuncRoot, i1 %cout_tmp_3, void %for.inc.split"   --->   Operation 14 'phi' 'cin_assign' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_2 = load i3 %i" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:56->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190->bcd_4_digit_adder.cpp:27]   --->   Operation 15 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.71ns)   --->   "%icmp_ln26 = icmp_eq  i3 %i_2, i3 4" [bcd_4_digit_adder.cpp:26]   --->   Operation 16 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln26 = br i1 %icmp_ln26, void %for.inc.split, void %for.end.exitStub" [bcd_4_digit_adder.cpp:26]   --->   Operation 17 'br' 'br_ln26' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%cout_tmp_3_015_load_1 = load i1 %cout_tmp_3_015" [bcd_4_digit_adder.cpp:8->bcd_4_digit_adder.cpp:27]   --->   Operation 18 'load' 'cout_tmp_3_015_load_1' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%p_load = load i128 %empty" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 19 'load' 'p_load' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%specpipeline_ln26 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [bcd_4_digit_adder.cpp:26]   --->   Operation 20 'specpipeline' 'specpipeline_ln26' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%speclooptripcount_ln26 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [bcd_4_digit_adder.cpp:26]   --->   Operation 21 'speclooptripcount' 'speclooptripcount_ln26' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln26 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [bcd_4_digit_adder.cpp:26]   --->   Operation 22 'specloopname' 'specloopname_ln26' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln56 = trunc i3 %i_2" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:56->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190->bcd_4_digit_adder.cpp:27]   --->   Operation 23 'trunc' 'trunc_ln56' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i2.i5, i2 %trunc_ln56, i5 0" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:56->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190->bcd_4_digit_adder.cpp:27]   --->   Operation 24 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i7 %shl_ln" [bcd_4_digit_adder.cpp:27]   --->   Operation 25 'zext' 'zext_ln27' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.40ns)   --->   "%lshr_ln27 = lshr i128 %a_load_read, i128 %zext_ln27" [bcd_4_digit_adder.cpp:27]   --->   Operation 26 'lshr' 'lshr_ln27' <Predicate = (!icmp_ln26)> <Delay = 1.40> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln27 = trunc i128 %lshr_ln27" [bcd_4_digit_adder.cpp:27]   --->   Operation 27 'trunc' 'trunc_ln27' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.40ns)   --->   "%lshr_ln27_1 = lshr i128 %b_load_read, i128 %zext_ln27" [bcd_4_digit_adder.cpp:27]   --->   Operation 28 'lshr' 'lshr_ln27_1' <Predicate = (!icmp_ln26)> <Delay = 1.40> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln27_1 = trunc i128 %lshr_ln27_1" [bcd_4_digit_adder.cpp:27]   --->   Operation 29 'trunc' 'trunc_ln27_1' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln5 = zext i1 %cin_assign" [bcd_4_digit_adder.cpp:5->bcd_4_digit_adder.cpp:27]   --->   Operation 30 'zext' 'zext_ln5' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln5 = add i32 %trunc_ln27, i32 %zext_ln5" [bcd_4_digit_adder.cpp:5->bcd_4_digit_adder.cpp:27]   --->   Operation 31 'add' 'add_ln5' <Predicate = (!icmp_ln26)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 32 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%temp_sum = add i32 %add_ln5, i32 %trunc_ln27_1" [bcd_4_digit_adder.cpp:5->bcd_4_digit_adder.cpp:27]   --->   Operation 32 'add' 'temp_sum' <Predicate = (!icmp_ln26)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 33 [1/1] (1.14ns)   --->   "%cout_tmp_3 = icmp_ugt  i32 %temp_sum, i32 9" [bcd_4_digit_adder.cpp:8->bcd_4_digit_adder.cpp:27]   --->   Operation 33 'icmp' 'cout_tmp_3' <Predicate = (!icmp_ln26)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.62ns)   --->   "%add_ln8 = add i2 %trunc_ln56, i2 3" [bcd_4_digit_adder.cpp:8->bcd_4_digit_adder.cpp:27]   --->   Operation 34 'add' 'add_ln8' <Predicate = (!icmp_ln26)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %add_ln8, i32 1" [bcd_4_digit_adder.cpp:8->bcd_4_digit_adder.cpp:27]   --->   Operation 35 'bitselect' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.34ns)   --->   "%select_ln8 = select i1 %tmp, i1 %cout_tmp_3, i1 %cout_tmp_3_015_load_1" [bcd_4_digit_adder.cpp:8->bcd_4_digit_adder.cpp:27]   --->   Operation 36 'select' 'select_ln8' <Predicate = (!icmp_ln26)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.14ns)   --->   "%add_ln12 = add i32 %temp_sum, i32 4294967286" [bcd_4_digit_adder.cpp:12->bcd_4_digit_adder.cpp:27]   --->   Operation 37 'add' 'add_ln12' <Predicate = (!icmp_ln26)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node shl_ln16_1)   --->   "%temp_sum_1 = select i1 %cout_tmp_3, i32 %add_ln12, i32 %temp_sum" [bcd_4_digit_adder.cpp:11->bcd_4_digit_adder.cpp:27]   --->   Operation 38 'select' 'temp_sum_1' <Predicate = (!icmp_ln26)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (1.29ns)   --->   "%shl_ln16 = shl i128 4294967295, i128 %zext_ln27" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 39 'shl' 'shl_ln16' <Predicate = (!icmp_ln26)> <Delay = 1.29> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node shl_ln16_1)   --->   "%zext_ln16 = zext i32 %temp_sum_1" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 40 'zext' 'zext_ln16' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.27ns) (out node of the LUT)   --->   "%shl_ln16_1 = shl i128 %zext_ln16, i128 %zext_ln27" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 41 'shl' 'shl_ln16_1' <Predicate = (!icmp_ln26)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node or_ln16)   --->   "%xor_ln16 = xor i128 %shl_ln16, i128 340282366920938463463374607431768211455" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 42 'xor' 'xor_ln16' <Predicate = (!icmp_ln26)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln16)   --->   "%and_ln16 = and i128 %p_load, i128 %xor_ln16" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 43 'and' 'and_ln16' <Predicate = (!icmp_ln26)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.32ns) (out node of the LUT)   --->   "%or_ln16 = or i128 %shl_ln16_1, i128 %and_ln16" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 44 'or' 'or_ln16' <Predicate = (!icmp_ln26)> <Delay = 0.32> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.71ns)   --->   "%add_ln26 = add i3 %i_2, i3 1" [bcd_4_digit_adder.cpp:26]   --->   Operation 45 'add' 'add_ln26' <Predicate = (!icmp_ln26)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.46ns)   --->   "%store_ln16 = store i128 %or_ln16, i128 %empty" [bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27]   --->   Operation 46 'store' 'store_ln16' <Predicate = (!icmp_ln26)> <Delay = 0.46>
ST_2 : Operation 47 [1/1] (0.46ns)   --->   "%store_ln55 = store i3 %add_ln26, i3 %i" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->bcd_4_digit_adder.cpp:27]   --->   Operation 47 'store' 'store_ln55' <Predicate = (!icmp_ln26)> <Delay = 0.46>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%store_ln26 = store i1 %select_ln8, i1 %cout_tmp_3_015" [bcd_4_digit_adder.cpp:26]   --->   Operation 48 'store' 'store_ln26' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln26 = br void %for.inc" [bcd_4_digit_adder.cpp:26]   --->   Operation 49 'br' 'br_ln26' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%cout_tmp_3_015_load = load i1 %cout_tmp_3_015"   --->   Operation 50 'load' 'cout_tmp_3_015_load' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%p_load8 = load i128 %empty"   --->   Operation 51 'load' 'p_load8' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %cout_tmp_3_015_out, i1 %cout_tmp_3_015_load"   --->   Operation 52 'write' 'write_ln0' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i128P0A, i128 %p_out, i128 %p_load8"   --->   Operation 53 'write' 'write_ln0' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 54 'ret' 'ret_ln0' <Predicate = (icmp_ln26)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.460ns
The critical path consists of the following:
	'alloca' operation 128 bit ('empty') [9]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of variable 'or_ln_read' on local variable 'empty' [14]  (0.460 ns)

 <State 2>: 5.526ns
The critical path consists of the following:
	'load' operation 3 bit ('i', C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:56->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190->bcd_4_digit_adder.cpp:27) on local variable '__n', C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->bcd_4_digit_adder.cpp:27 [19]  (0.000 ns)
	'lshr' operation 128 bit ('lshr_ln27_1', bcd_4_digit_adder.cpp:27) [33]  (1.409 ns)
	'add' operation 32 bit ('temp_sum', bcd_4_digit_adder.cpp:5->bcd_4_digit_adder.cpp:27) [37]  (0.907 ns)
	'add' operation 32 bit ('add_ln12', bcd_4_digit_adder.cpp:12->bcd_4_digit_adder.cpp:27) [42]  (1.142 ns)
	'select' operation 32 bit ('temp_sum', bcd_4_digit_adder.cpp:11->bcd_4_digit_adder.cpp:27) [43]  (0.000 ns)
	'shl' operation 128 bit ('shl_ln16_1', bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27) [46]  (1.279 ns)
	'or' operation 128 bit ('or_ln16', bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27) [49]  (0.329 ns)
	'store' operation 0 bit ('store_ln16', bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27) of variable 'or_ln16', bcd_4_digit_adder.cpp:16->bcd_4_digit_adder.cpp:27 on local variable 'empty' [51]  (0.460 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
