

================================================================
== Vitis HLS Report for 'full_adder'
================================================================
* Date:           Mon Apr  8 10:10:45 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        full_adder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  0.296 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.29>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln4 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [full_adder.cpp:4]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %A"   --->   Operation 3 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %A, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %B"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %B, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %C_In"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %C_In, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %sum"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %sum, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %carry"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %carry, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%C_In_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %C_In" [full_adder.cpp:4]   --->   Operation 13 'read' 'C_In_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%B_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %B" [full_adder.cpp:4]   --->   Operation 14 'read' 'B_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%A_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %A" [full_adder.cpp:4]   --->   Operation 15 'read' 'A_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node or_ln11)   --->   "%c1 = xor i1 %A_read, i1 %B_read" [hafl_adder.cpp:5->full_adder.cpp:7]   --->   Operation 16 'xor' 'c1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.14ns)   --->   "%s1 = and i1 %A_read, i1 %B_read" [hafl_adder.cpp:6->full_adder.cpp:7]   --->   Operation 17 'and' 's1' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node or_ln11)   --->   "%c2 = xor i1 %s1, i1 %C_In_read" [hafl_adder.cpp:5->full_adder.cpp:9]   --->   Operation 18 'xor' 'c2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.14ns)   --->   "%and_ln6 = and i1 %s1, i1 %C_In_read" [hafl_adder.cpp:6->full_adder.cpp:9]   --->   Operation 19 'and' 'and_ln6' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%write_ln6 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %sum, i1 %and_ln6" [hafl_adder.cpp:6->full_adder.cpp:9]   --->   Operation 20 'write' 'write_ln6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln11 = or i1 %c1, i1 %c2" [full_adder.cpp:11]   --->   Operation 21 'or' 'or_ln11' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%write_ln11 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %carry, i1 %or_ln11" [full_adder.cpp:11]   --->   Operation 22 'write' 'write_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%ret_ln12 = ret" [full_adder.cpp:12]   --->   Operation 23 'ret' 'ret_ln12' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ A]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ B]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ C_In]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ sum]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
Port [ carry]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
spectopmodule_ln4 (spectopmodule) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
C_In_read         (read         ) [ 00]
B_read            (read         ) [ 00]
A_read            (read         ) [ 00]
c1                (xor          ) [ 00]
s1                (and          ) [ 00]
c2                (xor          ) [ 00]
and_ln6           (and          ) [ 00]
write_ln6         (write        ) [ 00]
or_ln11           (or           ) [ 00]
write_ln11        (write        ) [ 00]
ret_ln12          (ret          ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="A">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="B">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="C_In">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="C_In"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="sum">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sum"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="carry">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="carry"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.i1P0A"/></StgValue>
</bind>
</comp>

<comp id="30" class="1004" name="C_In_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="1" slack="0"/>
<pin id="32" dir="0" index="1" bw="1" slack="0"/>
<pin id="33" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="C_In_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="B_read_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="1" slack="0"/>
<pin id="38" dir="0" index="1" bw="1" slack="0"/>
<pin id="39" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="B_read/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="A_read_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="1" slack="0"/>
<pin id="44" dir="0" index="1" bw="1" slack="0"/>
<pin id="45" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="A_read/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="write_ln6_write_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="0" slack="0"/>
<pin id="50" dir="0" index="1" bw="1" slack="0"/>
<pin id="51" dir="0" index="2" bw="1" slack="0"/>
<pin id="52" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln6/1 "/>
</bind>
</comp>

<comp id="55" class="1004" name="write_ln11_write_fu_55">
<pin_list>
<pin id="56" dir="0" index="0" bw="0" slack="0"/>
<pin id="57" dir="0" index="1" bw="1" slack="0"/>
<pin id="58" dir="0" index="2" bw="1" slack="0"/>
<pin id="59" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln11/1 "/>
</bind>
</comp>

<comp id="62" class="1004" name="c1_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="0" index="1" bw="1" slack="0"/>
<pin id="65" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="c1/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="s1_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="1" slack="0"/>
<pin id="70" dir="0" index="1" bw="1" slack="0"/>
<pin id="71" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="s1/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="c2_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="1" slack="0"/>
<pin id="76" dir="0" index="1" bw="1" slack="0"/>
<pin id="77" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="c2/1 "/>
</bind>
</comp>

<comp id="80" class="1004" name="and_ln6_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="1" slack="0"/>
<pin id="82" dir="0" index="1" bw="1" slack="0"/>
<pin id="83" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln6/1 "/>
</bind>
</comp>

<comp id="87" class="1004" name="or_ln11_fu_87">
<pin_list>
<pin id="88" dir="0" index="0" bw="1" slack="0"/>
<pin id="89" dir="0" index="1" bw="1" slack="0"/>
<pin id="90" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln11/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="34"><net_src comp="26" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="4" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="26" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="2" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="26" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="0" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="53"><net_src comp="28" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="54"><net_src comp="6" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="60"><net_src comp="28" pin="0"/><net_sink comp="55" pin=0"/></net>

<net id="61"><net_src comp="8" pin="0"/><net_sink comp="55" pin=1"/></net>

<net id="66"><net_src comp="42" pin="2"/><net_sink comp="62" pin=0"/></net>

<net id="67"><net_src comp="36" pin="2"/><net_sink comp="62" pin=1"/></net>

<net id="72"><net_src comp="42" pin="2"/><net_sink comp="68" pin=0"/></net>

<net id="73"><net_src comp="36" pin="2"/><net_sink comp="68" pin=1"/></net>

<net id="78"><net_src comp="68" pin="2"/><net_sink comp="74" pin=0"/></net>

<net id="79"><net_src comp="30" pin="2"/><net_sink comp="74" pin=1"/></net>

<net id="84"><net_src comp="68" pin="2"/><net_sink comp="80" pin=0"/></net>

<net id="85"><net_src comp="30" pin="2"/><net_sink comp="80" pin=1"/></net>

<net id="86"><net_src comp="80" pin="2"/><net_sink comp="48" pin=2"/></net>

<net id="91"><net_src comp="62" pin="2"/><net_sink comp="87" pin=0"/></net>

<net id="92"><net_src comp="74" pin="2"/><net_sink comp="87" pin=1"/></net>

<net id="93"><net_src comp="87" pin="2"/><net_sink comp="55" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: sum | {1 }
	Port: carry | {1 }
 - Input state : 
	Port: full_adder<bool> : A | {1 }
	Port: full_adder<bool> : B | {1 }
	Port: full_adder<bool> : C_In | {1 }
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|    xor   |        c1_fu_62        |    0    |    2    |
|          |        c2_fu_74        |    0    |    2    |
|----------|------------------------|---------|---------|
|    and   |        s1_fu_68        |    0    |    2    |
|          |      and_ln6_fu_80     |    0    |    2    |
|----------|------------------------|---------|---------|
|    or    |      or_ln11_fu_87     |    0    |    2    |
|----------|------------------------|---------|---------|
|          |  C_In_read_read_fu_30  |    0    |    0    |
|   read   |    B_read_read_fu_36   |    0    |    0    |
|          |    A_read_read_fu_42   |    0    |    0    |
|----------|------------------------|---------|---------|
|   write  |  write_ln6_write_fu_48 |    0    |    0    |
|          | write_ln11_write_fu_55 |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |    10   |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   10   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   10   |
+-----------+--------+--------+
