

================================================================
== Vitis HLS Report for 'ripple_carry_adder'
================================================================
* Date:           Mon Apr  1 06:47:10 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        ripple-carry_adder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.809 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    6|    6|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_7_1  |        3|        3|         1|          1|          1|     3|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [ripple_carry_adder.cpp:7]   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 5 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%spectopmodule_ln4 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [ripple_carry_adder.cpp:4]   --->   Operation 6 'spectopmodule' 'spectopmodule_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i3 %a"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i3 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i3 %b"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i3 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %carry_in"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %carry_in, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i3 %sum"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i3 %sum, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %carry_out"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %carry_out, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%carry_in_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %carry_in" [ripple_carry_adder.cpp:4]   --->   Operation 17 'read' 'carry_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%a_read = read i3 @_ssdm_op_Read.ap_auto.i3P0A, i3 %a"   --->   Operation 18 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%b_read = read i3 @_ssdm_op_Read.ap_auto.i3P0A, i3 %b"   --->   Operation 19 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sum_read = read i3 @_ssdm_op_Read.ap_auto.i3P0A, i3 %sum" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 20 'read' 'sum_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.46ns)   --->   "%store_ln6 = store i3 %sum_read, i3 %empty" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 21 'store' 'store_ln6' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 22 [1/1] (0.46ns)   --->   "%store_ln7 = store i2 0, i2 %i" [ripple_carry_adder.cpp:7]   --->   Operation 22 'store' 'store_ln7' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 23 [1/1] (0.46ns)   --->   "%br_ln7 = br void %for.inc" [ripple_carry_adder.cpp:7]   --->   Operation 23 'br' 'br_ln7' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.80>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%carry_1 = phi i1 %carry_in_read, void %entry, i1 %carry, void %for.inc.split"   --->   Operation 24 'phi' 'carry_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%i_1 = load i2 %i" [ripple_carry_adder.cpp:7]   --->   Operation 25 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.62ns)   --->   "%icmp_ln7 = icmp_eq  i2 %i_1, i2 3" [ripple_carry_adder.cpp:7]   --->   Operation 26 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.62ns)   --->   "%add_ln7 = add i2 %i_1, i2 1" [ripple_carry_adder.cpp:7]   --->   Operation 27 'add' 'add_ln7' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln7 = br i1 %icmp_ln7, void %for.inc.split, void %for.end" [ripple_carry_adder.cpp:7]   --->   Operation 28 'br' 'br_ln7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%p_load = load i3 %empty" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 29 'load' 'p_load' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specpipeline_ln5 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [ripple_carry_adder.cpp:5]   --->   Operation 30 'specpipeline' 'specpipeline_ln5' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%speclooptripcount_ln5 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [ripple_carry_adder.cpp:5]   --->   Operation 31 'speclooptripcount' 'speclooptripcount_ln5' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%specloopname_ln7 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [ripple_carry_adder.cpp:7]   --->   Operation 32 'specloopname' 'specloopname_ln7' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i2 %i_1" [ripple_carry_adder.cpp:8]   --->   Operation 33 'zext' 'zext_ln8' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.62ns)   --->   "%lshr_ln8 = lshr i3 %a_read, i3 %zext_ln8" [ripple_carry_adder.cpp:8]   --->   Operation 34 'lshr' 'lshr_ln8' <Predicate = (!icmp_ln7)> <Delay = 0.62> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln8 = trunc i3 %lshr_ln8" [ripple_carry_adder.cpp:8]   --->   Operation 35 'trunc' 'trunc_ln8' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.62ns)   --->   "%lshr_ln8_1 = lshr i3 %b_read, i3 %zext_ln8" [ripple_carry_adder.cpp:8]   --->   Operation 36 'lshr' 'lshr_ln8_1' <Predicate = (!icmp_ln7)> <Delay = 0.62> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln8_1 = trunc i3 %lshr_ln8_1" [ripple_carry_adder.cpp:8]   --->   Operation 37 'trunc' 'trunc_ln8_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node shl_ln6_1)   --->   "%xor_ln6 = xor i1 %trunc_ln8, i1 %carry_1" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 38 'xor' 'xor_ln6' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node shl_ln6_1)   --->   "%xor_ln6_1 = xor i1 %xor_ln6, i1 %trunc_ln8_1" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 39 'xor' 'xor_ln6_1' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.58ns)   --->   "%shl_ln6 = shl i3 1, i3 %zext_ln8" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 40 'shl' 'shl_ln6' <Predicate = (!icmp_ln7)> <Delay = 0.58> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node shl_ln6_1)   --->   "%zext_ln6 = zext i1 %xor_ln6_1" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 41 'zext' 'zext_ln6' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.58ns) (out node of the LUT)   --->   "%shl_ln6_1 = shl i3 %zext_ln6, i3 %zext_ln8" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 42 'shl' 'shl_ln6_1' <Predicate = (!icmp_ln7)> <Delay = 0.58> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln6)   --->   "%xor_ln6_2 = xor i3 %shl_ln6, i3 7" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 43 'xor' 'xor_ln6_2' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node or_ln6)   --->   "%and_ln6 = and i3 %p_load, i3 %xor_ln6_2" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 44 'and' 'and_ln6' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln6 = or i3 %shl_ln6_1, i3 %and_ln6" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 45 'or' 'or_ln6' <Predicate = (!icmp_ln7)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node carry)   --->   "%or_ln9 = or i1 %carry_1, i1 %trunc_ln8" [full_adder.cpp:9->ripple_carry_adder.cpp:8]   --->   Operation 46 'or' 'or_ln9' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node carry)   --->   "%and_ln9 = and i1 %or_ln9, i1 %trunc_ln8_1" [full_adder.cpp:9->ripple_carry_adder.cpp:8]   --->   Operation 47 'and' 'and_ln9' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node carry)   --->   "%and_ln9_1 = and i1 %carry_1, i1 %trunc_ln8" [full_adder.cpp:9->ripple_carry_adder.cpp:8]   --->   Operation 48 'and' 'and_ln9_1' <Predicate = (!icmp_ln7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.14ns) (out node of the LUT)   --->   "%carry = or i1 %and_ln9, i1 %and_ln9_1" [full_adder.cpp:9->ripple_carry_adder.cpp:8]   --->   Operation 49 'or' 'carry' <Predicate = (!icmp_ln7)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.46ns)   --->   "%store_ln6 = store i3 %or_ln6, i3 %empty" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 50 'store' 'store_ln6' <Predicate = (!icmp_ln7)> <Delay = 0.46>
ST_2 : Operation 51 [1/1] (0.46ns)   --->   "%store_ln7 = store i2 %add_ln7, i2 %i" [ripple_carry_adder.cpp:7]   --->   Operation 51 'store' 'store_ln7' <Predicate = (!icmp_ln7)> <Delay = 0.46>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln7 = br void %for.inc" [ripple_carry_adder.cpp:7]   --->   Operation 52 'br' 'br_ln7' <Predicate = (!icmp_ln7)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%p_load4 = load i3 %empty" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 53 'load' 'p_load4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%write_ln6 = write void @_ssdm_op_Write.ap_auto.i3P0A, i3 %sum, i3 %p_load4" [full_adder.cpp:6->ripple_carry_adder.cpp:8]   --->   Operation 54 'write' 'write_ln6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%write_ln11 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %carry_out, i1 %carry_1" [ripple_carry_adder.cpp:11]   --->   Operation 55 'write' 'write_ln11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%ret_ln12 = ret" [ripple_carry_adder.cpp:12]   --->   Operation 56 'ret' 'ret_ln12' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.460ns
The critical path consists of the following:
	'alloca' operation 3 bit ('empty') [7]  (0.000 ns)
	'store' operation 0 bit ('store_ln6', full_adder.cpp:6->ripple_carry_adder.cpp:8) of variable 'sum_read', full_adder.cpp:6->ripple_carry_adder.cpp:8 on local variable 'empty' [23]  (0.460 ns)

 <State 2>: 1.809ns
The critical path consists of the following:
	'load' operation 2 bit ('i', ripple_carry_adder.cpp:7) on local variable 'i', ripple_carry_adder.cpp:7 [28]  (0.000 ns)
	'lshr' operation 3 bit ('lshr_ln8', ripple_carry_adder.cpp:8) [38]  (0.621 ns)
	'xor' operation 1 bit ('xor_ln6', full_adder.cpp:6->ripple_carry_adder.cpp:8) [42]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln6_1', full_adder.cpp:6->ripple_carry_adder.cpp:8) [43]  (0.000 ns)
	'shl' operation 3 bit ('shl_ln6_1', full_adder.cpp:6->ripple_carry_adder.cpp:8) [46]  (0.580 ns)
	'or' operation 3 bit ('or_ln6', full_adder.cpp:6->ripple_carry_adder.cpp:8) [49]  (0.148 ns)
	'store' operation 0 bit ('store_ln6', full_adder.cpp:6->ripple_carry_adder.cpp:8) of variable 'or_ln6', full_adder.cpp:6->ripple_carry_adder.cpp:8 on local variable 'empty' [54]  (0.460 ns)

 <State 3>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
