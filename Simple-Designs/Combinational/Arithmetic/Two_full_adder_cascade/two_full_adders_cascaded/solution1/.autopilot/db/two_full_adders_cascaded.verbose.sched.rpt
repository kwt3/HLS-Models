

================================================================
== Vitis HLS Report for 'two_full_adders_cascaded'
================================================================
* Date:           Mon Apr  1 06:59:20 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        two_full_adders_cascaded
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  0.296 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.29>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [two_full_adders_cascaded.cpp:3]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %x"   --->   Operation 3 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i4 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %y"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i4 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %cout"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %cout, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %sum"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i4 %sum, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%x_read = read i4 @_ssdm_op_Read.ap_auto.i4P0A, i4 %x" [two_full_adders_cascaded.cpp:6]   --->   Operation 11 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i4 %x_read" [two_full_adders_cascaded.cpp:6]   --->   Operation 12 'trunc' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%y_read = read i4 @_ssdm_op_Read.ap_auto.i4P0A, i4 %y" [two_full_adders_cascaded.cpp:6]   --->   Operation 13 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln6_1 = trunc i4 %y_read" [two_full_adders_cascaded.cpp:6]   --->   Operation 14 'trunc' 'trunc_ln6_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.14ns)   --->   "%xor_ln4 = xor i1 %trunc_ln6, i1 %trunc_ln6_1" [full_adder.cpp:4->two_full_adders_cascaded.cpp:6]   --->   Operation 15 'xor' 'xor_ln4' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sum_read = read i4 @_ssdm_op_Read.ap_auto.i4P0A, i4 %sum" [full_adder.cpp:4->two_full_adders_cascaded.cpp:6]   --->   Operation 16 'read' 'sum_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %sum_read, i32 2, i32 3" [full_adder.cpp:4->two_full_adders_cascaded.cpp:6]   --->   Operation 17 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.14ns)   --->   "%cout0 = and i1 %trunc_ln6_1, i1 %trunc_ln6" [full_adder.cpp:5->two_full_adders_cascaded.cpp:6]   --->   Operation 18 'and' 'cout0' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %x_read, i32 1" [two_full_adders_cascaded.cpp:7]   --->   Operation 19 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %y_read, i32 1" [two_full_adders_cascaded.cpp:7]   --->   Operation 20 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.14ns)   --->   "%xor_ln4_1 = xor i1 %tmp_1, i1 %tmp_2" [full_adder.cpp:4->two_full_adders_cascaded.cpp:7]   --->   Operation 21 'xor' 'xor_ln4_1' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.14ns)   --->   "%xor_ln4_2 = xor i1 %xor_ln4_1, i1 %cout0" [full_adder.cpp:4->two_full_adders_cascaded.cpp:7]   --->   Operation 22 'xor' 'xor_ln4_2' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%or_ln4_1 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i1.i1, i2 %tmp, i1 %xor_ln4_2, i1 %xor_ln4" [full_adder.cpp:4->two_full_adders_cascaded.cpp:7]   --->   Operation 23 'bitconcatenate' 'or_ln4_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%write_ln4 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %sum, i4 %or_ln4_1" [full_adder.cpp:4->two_full_adders_cascaded.cpp:7]   --->   Operation 24 'write' 'write_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node cout1)   --->   "%and_ln5 = and i1 %tmp_2, i1 %tmp_1" [full_adder.cpp:5->two_full_adders_cascaded.cpp:7]   --->   Operation 25 'and' 'and_ln5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node cout1)   --->   "%and_ln5_1 = and i1 %xor_ln4_1, i1 %cout0" [full_adder.cpp:5->two_full_adders_cascaded.cpp:7]   --->   Operation 26 'and' 'and_ln5_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.14ns) (out node of the LUT)   --->   "%cout1 = or i1 %and_ln5_1, i1 %and_ln5" [full_adder.cpp:5->two_full_adders_cascaded.cpp:7]   --->   Operation 27 'or' 'cout1' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%write_ln8 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %cout, i1 %cout1" [two_full_adders_cascaded.cpp:8]   --->   Operation 28 'write' 'write_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%ret_ln9 = ret" [two_full_adders_cascaded.cpp:9]   --->   Operation 29 'ret' 'ret_ln9' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.296ns
The critical path consists of the following:
	wire read operation ('x_read', two_full_adders_cascaded.cpp:6) on port 'x' (two_full_adders_cascaded.cpp:6) [14]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln4_1', full_adder.cpp:4->two_full_adders_cascaded.cpp:7) [24]  (0.148 ns)
	'xor' operation 1 bit ('xor_ln4_2', full_adder.cpp:4->two_full_adders_cascaded.cpp:7) [25]  (0.148 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
