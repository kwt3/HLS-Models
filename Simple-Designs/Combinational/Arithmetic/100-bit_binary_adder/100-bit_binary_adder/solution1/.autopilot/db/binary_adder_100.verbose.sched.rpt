

================================================================
== Vitis HLS Report for 'binary_adder_100'
================================================================
* Date:           Mon Apr  1 07:24:55 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        100-bit_binary_adder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.144 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      102|      102|  1.020 us|  1.020 us|  103|  103|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_5_1  |      100|      100|         1|          1|          1|   100|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [binary_adder_100.cpp:5]   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 5 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [binary_adder_100.cpp:3]   --->   Operation 6 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i100 %a"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i100 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i100 %b"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i100 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %carry_in"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %carry_in, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i100 %sum"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i100 %sum, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %carry_out"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %carry_out, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%carry_in_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %carry_in" [binary_adder_100.cpp:3]   --->   Operation 17 'read' 'carry_in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%a_read = read i100 @_ssdm_op_Read.ap_auto.i100P0A, i100 %a"   --->   Operation 18 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%b_read = read i100 @_ssdm_op_Read.ap_auto.i100P0A, i100 %b"   --->   Operation 19 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sum_read = read i100 @_ssdm_op_Read.ap_auto.i100P0A, i100 %sum" [binary_adder_100.cpp:7]   --->   Operation 20 'read' 'sum_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.46ns)   --->   "%store_ln7 = store i100 %sum_read, i100 %empty" [binary_adder_100.cpp:7]   --->   Operation 21 'store' 'store_ln7' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 22 [1/1] (0.46ns)   --->   "%store_ln5 = store i7 0, i7 %i" [binary_adder_100.cpp:5]   --->   Operation 22 'store' 'store_ln5' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 23 [1/1] (0.46ns)   --->   "%br_ln5 = br void %for.inc" [binary_adder_100.cpp:5]   --->   Operation 23 'br' 'br_ln5' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 3.14>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty_6 = phi i1 %or_ln8, void %for.inc.split, i1 %carry_in_read, void %entry" [binary_adder_100.cpp:8]   --->   Operation 24 'phi' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%i_1 = load i7 %i" [binary_adder_100.cpp:5]   --->   Operation 25 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.85ns)   --->   "%icmp_ln5 = icmp_eq  i7 %i_1, i7 100" [binary_adder_100.cpp:5]   --->   Operation 26 'icmp' 'icmp_ln5' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.85ns)   --->   "%add_ln5 = add i7 %i_1, i7 1" [binary_adder_100.cpp:5]   --->   Operation 27 'add' 'add_ln5' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln5 = br i1 %icmp_ln5, void %for.inc.split, void %for.cond.cleanup" [binary_adder_100.cpp:5]   --->   Operation 28 'br' 'br_ln5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%p_load = load i100 %empty" [binary_adder_100.cpp:7]   --->   Operation 29 'load' 'p_load' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specpipeline_ln5 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [binary_adder_100.cpp:5]   --->   Operation 30 'specpipeline' 'specpipeline_ln5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%speclooptripcount_ln5 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 100, i64 100, i64 100" [binary_adder_100.cpp:5]   --->   Operation 31 'speclooptripcount' 'speclooptripcount_ln5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%specloopname_ln5 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [binary_adder_100.cpp:5]   --->   Operation 32 'specloopname' 'specloopname_ln5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln6 = zext i7 %i_1" [binary_adder_100.cpp:6]   --->   Operation 33 'zext' 'zext_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.40ns)   --->   "%lshr_ln6 = lshr i100 %a_read, i100 %zext_ln6" [binary_adder_100.cpp:6]   --->   Operation 34 'lshr' 'lshr_ln6' <Predicate = (!icmp_ln5)> <Delay = 1.40> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln6 = trunc i100 %lshr_ln6" [binary_adder_100.cpp:6]   --->   Operation 35 'trunc' 'trunc_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.40ns)   --->   "%lshr_ln6_1 = lshr i100 %b_read, i100 %zext_ln6" [binary_adder_100.cpp:6]   --->   Operation 36 'lshr' 'lshr_ln6_1' <Predicate = (!icmp_ln5)> <Delay = 1.40> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln6_1 = trunc i100 %lshr_ln6_1" [binary_adder_100.cpp:6]   --->   Operation 37 'trunc' 'trunc_ln6_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.14ns)   --->   "%xor_ln6 = xor i1 %trunc_ln6, i1 %trunc_ln6_1" [binary_adder_100.cpp:6]   --->   Operation 38 'xor' 'xor_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node shl_ln7_1)   --->   "%bit_sum = xor i1 %xor_ln6, i1 %empty_6" [binary_adder_100.cpp:6]   --->   Operation 39 'xor' 'bit_sum' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.77ns)   --->   "%shl_ln7 = shl i100 1, i100 %zext_ln6" [binary_adder_100.cpp:7]   --->   Operation 40 'shl' 'shl_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.77> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node shl_ln7_1)   --->   "%zext_ln7 = zext i1 %bit_sum" [binary_adder_100.cpp:7]   --->   Operation 41 'zext' 'zext_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.77ns) (out node of the LUT)   --->   "%shl_ln7_1 = shl i100 %zext_ln7, i100 %zext_ln6" [binary_adder_100.cpp:7]   --->   Operation 42 'shl' 'shl_ln7_1' <Predicate = (!icmp_ln5)> <Delay = 0.77> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%xor_ln7 = xor i100 %shl_ln7, i100 1267650600228229401496703205375" [binary_adder_100.cpp:7]   --->   Operation 43 'xor' 'xor_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%and_ln7 = and i100 %p_load, i100 %xor_ln7" [binary_adder_100.cpp:7]   --->   Operation 44 'and' 'and_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.36ns) (out node of the LUT)   --->   "%or_ln7 = or i100 %shl_ln7_1, i100 %and_ln7" [binary_adder_100.cpp:7]   --->   Operation 45 'or' 'or_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.36> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node or_ln8)   --->   "%and_ln8 = and i1 %trunc_ln6, i1 %trunc_ln6_1" [binary_adder_100.cpp:8]   --->   Operation 46 'and' 'and_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln8)   --->   "%and_ln8_1 = and i1 %xor_ln6, i1 %empty_6" [binary_adder_100.cpp:8]   --->   Operation 47 'and' 'and_ln8_1' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln8 = or i1 %and_ln8_1, i1 %and_ln8" [binary_adder_100.cpp:8]   --->   Operation 48 'or' 'or_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.46ns)   --->   "%store_ln7 = store i100 %or_ln7, i100 %empty" [binary_adder_100.cpp:7]   --->   Operation 49 'store' 'store_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.46>
ST_2 : Operation 50 [1/1] (0.46ns)   --->   "%store_ln5 = store i7 %add_ln5, i7 %i" [binary_adder_100.cpp:5]   --->   Operation 50 'store' 'store_ln5' <Predicate = (!icmp_ln5)> <Delay = 0.46>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln5 = br void %for.inc" [binary_adder_100.cpp:5]   --->   Operation 51 'br' 'br_ln5' <Predicate = (!icmp_ln5)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%p_load5 = load i100 %empty" [binary_adder_100.cpp:7]   --->   Operation 52 'load' 'p_load5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%write_ln7 = write void @_ssdm_op_Write.ap_auto.i100P0A, i100 %sum, i100 %p_load5" [binary_adder_100.cpp:7]   --->   Operation 53 'write' 'write_ln7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%write_ln6 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %carry_out, i1 %empty_6" [binary_adder_100.cpp:6]   --->   Operation 54 'write' 'write_ln6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%ret_ln10 = ret" [binary_adder_100.cpp:10]   --->   Operation 55 'ret' 'ret_ln10' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.460ns
The critical path consists of the following:
	'alloca' operation 100 bit ('empty') [7]  (0.000 ns)
	'store' operation 0 bit ('store_ln7', binary_adder_100.cpp:7) of variable 'sum_read', binary_adder_100.cpp:7 on local variable 'empty' [23]  (0.460 ns)

 <State 2>: 3.144ns
The critical path consists of the following:
	'load' operation 7 bit ('i', binary_adder_100.cpp:5) on local variable 'i', binary_adder_100.cpp:5 [28]  (0.000 ns)
	'lshr' operation 100 bit ('lshr_ln6_1', binary_adder_100.cpp:6) [40]  (1.405 ns)
	'xor' operation 1 bit ('xor_ln6', binary_adder_100.cpp:6) [42]  (0.148 ns)
	'xor' operation 1 bit ('bit_sum', binary_adder_100.cpp:6) [43]  (0.000 ns)
	'shl' operation 100 bit ('shl_ln7_1', binary_adder_100.cpp:7) [46]  (0.770 ns)
	'or' operation 100 bit ('or_ln7', binary_adder_100.cpp:7) [49]  (0.361 ns)
	'store' operation 0 bit ('store_ln7', binary_adder_100.cpp:7) of variable 'or_ln7', binary_adder_100.cpp:7 on local variable 'empty' [53]  (0.460 ns)

 <State 3>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
