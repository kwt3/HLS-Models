-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity wrapper_function is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_bool : IN STD_LOGIC_VECTOR (0 downto 0);
    B_bool : IN STD_LOGIC_VECTOR (0 downto 0);
    A_int : IN STD_LOGIC_VECTOR (31 downto 0);
    B_int : IN STD_LOGIC_VECTOR (31 downto 0);
    op : IN STD_LOGIC_VECTOR (31 downto 0);
    result_bool : OUT STD_LOGIC_VECTOR (0 downto 0);
    result_bool_ap_vld : OUT STD_LOGIC;
    result_int : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_int_ap_vld : OUT STD_LOGIC );
end;


architecture behav of wrapper_function is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "wrapper_function_wrapper_function,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.139667,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=574,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal and_ln7_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_fu_96_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln5_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln5_3_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln9_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln5_2_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln5_1_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln5_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln5_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln5_fu_154_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln5_1_fu_168_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln23_fu_185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln25_fu_197_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln27_fu_203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln29_fu_209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln31_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln21_1_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ashr_ln33_fu_191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln21_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_fu_233_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln21_1_fu_247_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln21_1_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_2_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_3_fu_269_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln21_2_fu_261_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    and_ln23_fu_185_p2 <= (B_int and A_int);
    and_ln5_fu_130_p2 <= (xor_ln13_fu_118_p2 and icmp_ln5_fu_124_p2);
    and_ln7_fu_100_p2 <= (B_bool and A_bool);
    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    ashr_ln33_fu_191_p2 <= std_logic_vector(shift_right(signed(A_int),to_integer(unsigned('0' & B_int(31-1 downto 0)))));
    icmp_ln21_1_fu_227_p2 <= "1" when (trunc_ln40_fu_96_p1 = ap_const_lv3_4) else "0";
    icmp_ln21_fu_221_p2 <= "1" when (trunc_ln40_fu_96_p1 = ap_const_lv3_5) else "0";
    icmp_ln5_1_fu_136_p2 <= "1" when (trunc_ln40_fu_96_p1 = ap_const_lv3_2) else "0";
    icmp_ln5_2_fu_142_p2 <= "1" when (trunc_ln40_fu_96_p1 = ap_const_lv3_1) else "0";
    icmp_ln5_3_fu_148_p2 <= "1" when (trunc_ln40_fu_96_p1 = ap_const_lv3_0) else "0";
    icmp_ln5_fu_124_p2 <= "1" when (trunc_ln40_fu_96_p1 = ap_const_lv3_3) else "0";
    or_ln21_1_fu_255_p2 <= (icmp_ln5_fu_124_p2 or icmp_ln21_1_fu_227_p2);
    or_ln21_2_fu_277_p2 <= (or_ln21_fu_241_p2 or or_ln21_1_fu_255_p2);
    or_ln21_fu_241_p2 <= (icmp_ln5_2_fu_142_p2 or icmp_ln5_1_fu_136_p2);
    or_ln25_fu_197_p2 <= (B_int or A_int);
    or_ln5_fu_162_p2 <= (icmp_ln5_3_fu_148_p2 or icmp_ln5_2_fu_142_p2);
    or_ln9_fu_106_p2 <= (B_bool or A_bool);
    result_bool <= 
        select_ln5_fu_154_p3 when (or_ln5_fu_162_p2(0) = '1') else 
        select_ln5_1_fu_168_p3;

    result_bool_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            result_bool_ap_vld <= ap_const_logic_1;
        else 
            result_bool_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    result_int <= 
        select_ln21_3_fu_269_p3 when (or_ln21_2_fu_277_p2(0) = '1') else 
        select_ln21_2_fu_261_p3;

    result_int_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            result_int_ap_vld <= ap_const_logic_1;
        else 
            result_int_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln21_1_fu_247_p3 <= 
        xor_ln29_fu_209_p2 when (icmp_ln5_fu_124_p2(0) = '1') else 
        shl_ln31_fu_215_p2;
    select_ln21_2_fu_261_p3 <= 
        ashr_ln33_fu_191_p2 when (icmp_ln21_fu_221_p2(0) = '1') else 
        and_ln23_fu_185_p2;
    select_ln21_3_fu_269_p3 <= 
        select_ln21_fu_233_p3 when (or_ln21_fu_241_p2(0) = '1') else 
        select_ln21_1_fu_247_p3;
    select_ln21_fu_233_p3 <= 
        or_ln25_fu_197_p2 when (icmp_ln5_2_fu_142_p2(0) = '1') else 
        xor_ln27_fu_203_p2;
    select_ln5_1_fu_168_p3 <= 
        xor_ln11_fu_112_p2 when (icmp_ln5_1_fu_136_p2(0) = '1') else 
        and_ln5_fu_130_p2;
    select_ln5_fu_154_p3 <= 
        and_ln7_fu_100_p2 when (icmp_ln5_3_fu_148_p2(0) = '1') else 
        or_ln9_fu_106_p2;
    shl_ln31_fu_215_p2 <= std_logic_vector(shift_left(unsigned(A_int),to_integer(unsigned('0' & B_int(31-1 downto 0)))));
    trunc_ln40_fu_96_p1 <= op(3 - 1 downto 0);
    xor_ln11_fu_112_p2 <= (B_bool xor A_bool);
    xor_ln13_fu_118_p2 <= (ap_const_lv1_1 xor and_ln7_fu_100_p2);
    xor_ln27_fu_203_p2 <= (B_int xor A_int);
    xor_ln29_fu_209_p2 <= (ap_const_lv32_FFFFFFFF xor and_ln23_fu_185_p2);
end behav;
