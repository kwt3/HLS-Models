

================================================================
== Vitis HLS Report for 'wrapper_function'
================================================================
* Date:           Mon Jun  3 03:27:03 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        logic_op
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.140 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.13>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%op_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op" [logic_op.cpp:40]   --->   Operation 2 'read' 'op_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%B_int_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %B_int" [logic_op.cpp:40]   --->   Operation 3 'read' 'B_int_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%A_int_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %A_int" [logic_op.cpp:40]   --->   Operation 4 'read' 'A_int_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%B_bool_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %B_bool" [logic_op.cpp:40]   --->   Operation 5 'read' 'B_bool_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%A_bool_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %A_bool" [logic_op.cpp:40]   --->   Operation 6 'read' 'A_bool_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%trunc_ln40 = trunc i32 %op_read" [logic_op.cpp:40]   --->   Operation 7 'trunc' 'trunc_ln40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%spectopmodule_ln40 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [logic_op.cpp:40]   --->   Operation 8 'spectopmodule' 'spectopmodule_ln40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %A_bool"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %A_bool, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %B_bool"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %B_bool, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %A_int"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %A_int, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %B_int"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %B_int, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %op"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %op, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %result_bool"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %result_bool, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %result_int"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %result_int, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.14ns)   --->   "%and_ln7 = and i1 %A_bool_read, i1 %B_bool_read" [logic_op.cpp:7->logic_op.cpp:41]   --->   Operation 23 'and' 'and_ln7' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node select_ln5)   --->   "%or_ln9 = or i1 %A_bool_read, i1 %B_bool_read" [logic_op.cpp:9->logic_op.cpp:41]   --->   Operation 24 'or' 'or_ln9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node select_ln5_1)   --->   "%xor_ln11 = xor i1 %A_bool_read, i1 %B_bool_read" [logic_op.cpp:11->logic_op.cpp:41]   --->   Operation 25 'xor' 'xor_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node select_ln5_1)   --->   "%xor_ln13 = xor i1 %and_ln7, i1 1" [logic_op.cpp:13->logic_op.cpp:41]   --->   Operation 26 'xor' 'xor_ln13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.71ns)   --->   "%icmp_ln5 = icmp_eq  i3 %trunc_ln40, i3 3" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 27 'icmp' 'icmp_ln5' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln5_1)   --->   "%and_ln5 = and i1 %icmp_ln5, i1 %xor_ln13" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 28 'and' 'and_ln5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.71ns)   --->   "%icmp_ln5_1 = icmp_eq  i3 %trunc_ln40, i3 2" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 29 'icmp' 'icmp_ln5_1' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.71ns)   --->   "%icmp_ln5_2 = icmp_eq  i3 %trunc_ln40, i3 1" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 30 'icmp' 'icmp_ln5_2' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.71ns)   --->   "%icmp_ln5_3 = icmp_eq  i3 %trunc_ln40, i3 0" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 31 'icmp' 'icmp_ln5_3' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.34ns) (out node of the LUT)   --->   "%select_ln5 = select i1 %icmp_ln5_3, i1 %and_ln7, i1 %or_ln9" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 32 'select' 'select_ln5' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node select_ln5_2)   --->   "%or_ln5 = or i1 %icmp_ln5_3, i1 %icmp_ln5_2" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 33 'or' 'or_ln5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.34ns) (out node of the LUT)   --->   "%select_ln5_1 = select i1 %icmp_ln5_1, i1 %xor_ln11, i1 %and_ln5" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 34 'select' 'select_ln5_1' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.34ns) (out node of the LUT)   --->   "%select_ln5_2 = select i1 %or_ln5, i1 %select_ln5, i1 %select_ln5_1" [logic_op.cpp:5->logic_op.cpp:41]   --->   Operation 35 'select' 'select_ln5_2' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%write_ln41 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %result_bool, i1 %select_ln5_2" [logic_op.cpp:41]   --->   Operation 36 'write' 'write_ln41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.28ns)   --->   "%and_ln23 = and i32 %B_int_read, i32 %A_int_read" [logic_op.cpp:23->logic_op.cpp:42]   --->   Operation 37 'and' 'and_ln23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.27ns)   --->   "%ashr_ln33 = ashr i32 %A_int_read, i32 %B_int_read" [logic_op.cpp:33->logic_op.cpp:42]   --->   Operation 38 'ashr' 'ashr_ln33' <Predicate = (icmp_ln21 & !or_ln21_2)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node select_ln21)   --->   "%or_ln25 = or i32 %B_int_read, i32 %A_int_read" [logic_op.cpp:25->logic_op.cpp:42]   --->   Operation 39 'or' 'or_ln25' <Predicate = (icmp_ln5_2 & or_ln21 & or_ln21_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node select_ln21)   --->   "%xor_ln27 = xor i32 %B_int_read, i32 %A_int_read" [logic_op.cpp:27->logic_op.cpp:42]   --->   Operation 40 'xor' 'xor_ln27' <Predicate = (!icmp_ln5_2 & or_ln21 & or_ln21_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node select_ln21_1)   --->   "%xor_ln29 = xor i32 %and_ln23, i32 4294967295" [logic_op.cpp:29->logic_op.cpp:42]   --->   Operation 41 'xor' 'xor_ln29' <Predicate = (icmp_ln5 & !or_ln21 & or_ln21_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (1.27ns)   --->   "%shl_ln31 = shl i32 %A_int_read, i32 %B_int_read" [logic_op.cpp:31->logic_op.cpp:42]   --->   Operation 42 'shl' 'shl_ln31' <Predicate = (!icmp_ln5 & !or_ln21 & or_ln21_2)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.71ns)   --->   "%icmp_ln21 = icmp_eq  i3 %trunc_ln40, i3 5" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 43 'icmp' 'icmp_ln21' <Predicate = (!or_ln21_2)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.71ns)   --->   "%icmp_ln21_1 = icmp_eq  i3 %trunc_ln40, i3 4" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 44 'icmp' 'icmp_ln21_1' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln21 = select i1 %icmp_ln5_2, i32 %or_ln25, i32 %xor_ln27" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 45 'select' 'select_ln21' <Predicate = (or_ln21 & or_ln21_2)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.14ns)   --->   "%or_ln21 = or i1 %icmp_ln5_2, i1 %icmp_ln5_1" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 46 'or' 'or_ln21' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln21_1 = select i1 %icmp_ln5, i32 %xor_ln29, i32 %shl_ln31" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 47 'select' 'select_ln21_1' <Predicate = (!or_ln21 & or_ln21_2)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node or_ln21_2)   --->   "%or_ln21_1 = or i1 %icmp_ln5, i1 %icmp_ln21_1" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 48 'or' 'or_ln21_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln21_4)   --->   "%select_ln21_2 = select i1 %icmp_ln21, i32 %ashr_ln33, i32 %and_ln23" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 49 'select' 'select_ln21_2' <Predicate = (!or_ln21_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln21_3 = select i1 %or_ln21, i32 %select_ln21, i32 %select_ln21_1" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 50 'select' 'select_ln21_3' <Predicate = (or_ln21_2)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln21_2 = or i1 %or_ln21, i1 %or_ln21_1" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 51 'or' 'or_ln21_2' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln21_4 = select i1 %or_ln21_2, i32 %select_ln21_3, i32 %select_ln21_2" [logic_op.cpp:21->logic_op.cpp:42]   --->   Operation 52 'select' 'select_ln21_4' <Predicate = true> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%write_ln42 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %result_int, i32 %select_ln21_4" [logic_op.cpp:42]   --->   Operation 53 'write' 'write_ln42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln43 = ret" [logic_op.cpp:43]   --->   Operation 54 'ret' 'ret_ln43' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ A_bool]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ B_bool]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ A_int]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ B_int]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ op]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ result_bool]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
Port [ result_int]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
op_read            (read         ) [ 00]
B_int_read         (read         ) [ 00]
A_int_read         (read         ) [ 00]
B_bool_read        (read         ) [ 00]
A_bool_read        (read         ) [ 00]
trunc_ln40         (trunc        ) [ 00]
spectopmodule_ln40 (spectopmodule) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
specbitsmap_ln0    (specbitsmap  ) [ 00]
specinterface_ln0  (specinterface) [ 00]
and_ln7            (and          ) [ 00]
or_ln9             (or           ) [ 00]
xor_ln11           (xor          ) [ 00]
xor_ln13           (xor          ) [ 00]
icmp_ln5           (icmp         ) [ 01]
and_ln5            (and          ) [ 00]
icmp_ln5_1         (icmp         ) [ 00]
icmp_ln5_2         (icmp         ) [ 01]
icmp_ln5_3         (icmp         ) [ 00]
select_ln5         (select       ) [ 00]
or_ln5             (or           ) [ 00]
select_ln5_1       (select       ) [ 00]
select_ln5_2       (select       ) [ 00]
write_ln41         (write        ) [ 00]
and_ln23           (and          ) [ 00]
ashr_ln33          (ashr         ) [ 00]
or_ln25            (or           ) [ 00]
xor_ln27           (xor          ) [ 00]
xor_ln29           (xor          ) [ 00]
shl_ln31           (shl          ) [ 00]
icmp_ln21          (icmp         ) [ 01]
icmp_ln21_1        (icmp         ) [ 00]
select_ln21        (select       ) [ 00]
or_ln21            (or           ) [ 01]
select_ln21_1      (select       ) [ 00]
or_ln21_1          (or           ) [ 00]
select_ln21_2      (select       ) [ 00]
select_ln21_3      (select       ) [ 00]
or_ln21_2          (or           ) [ 01]
select_ln21_4      (select       ) [ 00]
write_ln42         (write        ) [ 00]
ret_ln43           (ret          ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="A_bool">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_bool"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="B_bool">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B_bool"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="A_int">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_int"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="B_int">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B_int"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="op">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="op"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="result_bool">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="result_bool"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="result_int">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="result_int"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.i1P0A"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.i32P0A"/></StgValue>
</bind>
</comp>

<comp id="52" class="1004" name="op_read_read_fu_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="32" slack="0"/>
<pin id="54" dir="0" index="1" bw="32" slack="0"/>
<pin id="55" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="op_read/1 "/>
</bind>
</comp>

<comp id="58" class="1004" name="B_int_read_read_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="32" slack="0"/>
<pin id="60" dir="0" index="1" bw="32" slack="0"/>
<pin id="61" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="B_int_read/1 "/>
</bind>
</comp>

<comp id="64" class="1004" name="A_int_read_read_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="0"/>
<pin id="66" dir="0" index="1" bw="32" slack="0"/>
<pin id="67" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="A_int_read/1 "/>
</bind>
</comp>

<comp id="70" class="1004" name="B_bool_read_read_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="1" slack="0"/>
<pin id="72" dir="0" index="1" bw="1" slack="0"/>
<pin id="73" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="B_bool_read/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="A_bool_read_read_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="1" slack="0"/>
<pin id="78" dir="0" index="1" bw="1" slack="0"/>
<pin id="79" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="A_bool_read/1 "/>
</bind>
</comp>

<comp id="82" class="1004" name="write_ln41_write_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="0" slack="0"/>
<pin id="84" dir="0" index="1" bw="1" slack="0"/>
<pin id="85" dir="0" index="2" bw="1" slack="0"/>
<pin id="86" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln41/1 "/>
</bind>
</comp>

<comp id="89" class="1004" name="write_ln42_write_fu_89">
<pin_list>
<pin id="90" dir="0" index="0" bw="0" slack="0"/>
<pin id="91" dir="0" index="1" bw="32" slack="0"/>
<pin id="92" dir="0" index="2" bw="32" slack="0"/>
<pin id="93" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln42/1 "/>
</bind>
</comp>

<comp id="96" class="1004" name="trunc_ln40_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="32" slack="0"/>
<pin id="98" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln40/1 "/>
</bind>
</comp>

<comp id="100" class="1004" name="and_ln7_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="1" slack="0"/>
<pin id="102" dir="0" index="1" bw="1" slack="0"/>
<pin id="103" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln7/1 "/>
</bind>
</comp>

<comp id="106" class="1004" name="or_ln9_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="1" slack="0"/>
<pin id="108" dir="0" index="1" bw="1" slack="0"/>
<pin id="109" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln9/1 "/>
</bind>
</comp>

<comp id="112" class="1004" name="xor_ln11_fu_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="1" slack="0"/>
<pin id="114" dir="0" index="1" bw="1" slack="0"/>
<pin id="115" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln11/1 "/>
</bind>
</comp>

<comp id="118" class="1004" name="xor_ln13_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="1" slack="0"/>
<pin id="120" dir="0" index="1" bw="1" slack="0"/>
<pin id="121" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln13/1 "/>
</bind>
</comp>

<comp id="124" class="1004" name="icmp_ln5_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="3" slack="0"/>
<pin id="126" dir="0" index="1" bw="3" slack="0"/>
<pin id="127" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln5/1 "/>
</bind>
</comp>

<comp id="130" class="1004" name="and_ln5_fu_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="1" slack="0"/>
<pin id="132" dir="0" index="1" bw="1" slack="0"/>
<pin id="133" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln5/1 "/>
</bind>
</comp>

<comp id="136" class="1004" name="icmp_ln5_1_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="3" slack="0"/>
<pin id="138" dir="0" index="1" bw="3" slack="0"/>
<pin id="139" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln5_1/1 "/>
</bind>
</comp>

<comp id="142" class="1004" name="icmp_ln5_2_fu_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="3" slack="0"/>
<pin id="144" dir="0" index="1" bw="1" slack="0"/>
<pin id="145" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln5_2/1 "/>
</bind>
</comp>

<comp id="148" class="1004" name="icmp_ln5_3_fu_148">
<pin_list>
<pin id="149" dir="0" index="0" bw="3" slack="0"/>
<pin id="150" dir="0" index="1" bw="1" slack="0"/>
<pin id="151" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln5_3/1 "/>
</bind>
</comp>

<comp id="154" class="1004" name="select_ln5_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="1" slack="0"/>
<pin id="156" dir="0" index="1" bw="1" slack="0"/>
<pin id="157" dir="0" index="2" bw="1" slack="0"/>
<pin id="158" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln5/1 "/>
</bind>
</comp>

<comp id="162" class="1004" name="or_ln5_fu_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="1" slack="0"/>
<pin id="164" dir="0" index="1" bw="1" slack="0"/>
<pin id="165" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln5/1 "/>
</bind>
</comp>

<comp id="168" class="1004" name="select_ln5_1_fu_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="1" slack="0"/>
<pin id="170" dir="0" index="1" bw="1" slack="0"/>
<pin id="171" dir="0" index="2" bw="1" slack="0"/>
<pin id="172" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln5_1/1 "/>
</bind>
</comp>

<comp id="176" class="1004" name="select_ln5_2_fu_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="1" slack="0"/>
<pin id="178" dir="0" index="1" bw="1" slack="0"/>
<pin id="179" dir="0" index="2" bw="1" slack="0"/>
<pin id="180" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln5_2/1 "/>
</bind>
</comp>

<comp id="185" class="1004" name="and_ln23_fu_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="32" slack="0"/>
<pin id="187" dir="0" index="1" bw="32" slack="0"/>
<pin id="188" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln23/1 "/>
</bind>
</comp>

<comp id="191" class="1004" name="ashr_ln33_fu_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="32" slack="0"/>
<pin id="193" dir="0" index="1" bw="32" slack="0"/>
<pin id="194" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="ashr(22) " fcode="ashr"/>
<opset="ashr_ln33/1 "/>
</bind>
</comp>

<comp id="197" class="1004" name="or_ln25_fu_197">
<pin_list>
<pin id="198" dir="0" index="0" bw="32" slack="0"/>
<pin id="199" dir="0" index="1" bw="32" slack="0"/>
<pin id="200" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln25/1 "/>
</bind>
</comp>

<comp id="203" class="1004" name="xor_ln27_fu_203">
<pin_list>
<pin id="204" dir="0" index="0" bw="32" slack="0"/>
<pin id="205" dir="0" index="1" bw="32" slack="0"/>
<pin id="206" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27/1 "/>
</bind>
</comp>

<comp id="209" class="1004" name="xor_ln29_fu_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="32" slack="0"/>
<pin id="211" dir="0" index="1" bw="1" slack="0"/>
<pin id="212" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln29/1 "/>
</bind>
</comp>

<comp id="215" class="1004" name="shl_ln31_fu_215">
<pin_list>
<pin id="216" dir="0" index="0" bw="32" slack="0"/>
<pin id="217" dir="0" index="1" bw="32" slack="0"/>
<pin id="218" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="shl(20) " fcode="shl"/>
<opset="shl_ln31/1 "/>
</bind>
</comp>

<comp id="221" class="1004" name="icmp_ln21_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="3" slack="0"/>
<pin id="223" dir="0" index="1" bw="3" slack="0"/>
<pin id="224" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln21/1 "/>
</bind>
</comp>

<comp id="227" class="1004" name="icmp_ln21_1_fu_227">
<pin_list>
<pin id="228" dir="0" index="0" bw="3" slack="0"/>
<pin id="229" dir="0" index="1" bw="3" slack="0"/>
<pin id="230" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln21_1/1 "/>
</bind>
</comp>

<comp id="233" class="1004" name="select_ln21_fu_233">
<pin_list>
<pin id="234" dir="0" index="0" bw="1" slack="0"/>
<pin id="235" dir="0" index="1" bw="32" slack="0"/>
<pin id="236" dir="0" index="2" bw="32" slack="0"/>
<pin id="237" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln21/1 "/>
</bind>
</comp>

<comp id="241" class="1004" name="or_ln21_fu_241">
<pin_list>
<pin id="242" dir="0" index="0" bw="1" slack="0"/>
<pin id="243" dir="0" index="1" bw="1" slack="0"/>
<pin id="244" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln21/1 "/>
</bind>
</comp>

<comp id="247" class="1004" name="select_ln21_1_fu_247">
<pin_list>
<pin id="248" dir="0" index="0" bw="1" slack="0"/>
<pin id="249" dir="0" index="1" bw="32" slack="0"/>
<pin id="250" dir="0" index="2" bw="32" slack="0"/>
<pin id="251" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln21_1/1 "/>
</bind>
</comp>

<comp id="255" class="1004" name="or_ln21_1_fu_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="1" slack="0"/>
<pin id="257" dir="0" index="1" bw="1" slack="0"/>
<pin id="258" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln21_1/1 "/>
</bind>
</comp>

<comp id="261" class="1004" name="select_ln21_2_fu_261">
<pin_list>
<pin id="262" dir="0" index="0" bw="1" slack="0"/>
<pin id="263" dir="0" index="1" bw="32" slack="0"/>
<pin id="264" dir="0" index="2" bw="32" slack="0"/>
<pin id="265" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln21_2/1 "/>
</bind>
</comp>

<comp id="269" class="1004" name="select_ln21_3_fu_269">
<pin_list>
<pin id="270" dir="0" index="0" bw="1" slack="0"/>
<pin id="271" dir="0" index="1" bw="32" slack="0"/>
<pin id="272" dir="0" index="2" bw="32" slack="0"/>
<pin id="273" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln21_3/1 "/>
</bind>
</comp>

<comp id="277" class="1004" name="or_ln21_2_fu_277">
<pin_list>
<pin id="278" dir="0" index="0" bw="1" slack="0"/>
<pin id="279" dir="0" index="1" bw="1" slack="0"/>
<pin id="280" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln21_2/1 "/>
</bind>
</comp>

<comp id="283" class="1004" name="select_ln21_4_fu_283">
<pin_list>
<pin id="284" dir="0" index="0" bw="1" slack="0"/>
<pin id="285" dir="0" index="1" bw="32" slack="0"/>
<pin id="286" dir="0" index="2" bw="32" slack="0"/>
<pin id="287" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln21_4/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="56"><net_src comp="14" pin="0"/><net_sink comp="52" pin=0"/></net>

<net id="57"><net_src comp="8" pin="0"/><net_sink comp="52" pin=1"/></net>

<net id="62"><net_src comp="14" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="6" pin="0"/><net_sink comp="58" pin=1"/></net>

<net id="68"><net_src comp="14" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="69"><net_src comp="4" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="74"><net_src comp="16" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="75"><net_src comp="2" pin="0"/><net_sink comp="70" pin=1"/></net>

<net id="80"><net_src comp="16" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="0" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="87"><net_src comp="44" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="88"><net_src comp="10" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="94"><net_src comp="50" pin="0"/><net_sink comp="89" pin=0"/></net>

<net id="95"><net_src comp="12" pin="0"/><net_sink comp="89" pin=1"/></net>

<net id="99"><net_src comp="52" pin="2"/><net_sink comp="96" pin=0"/></net>

<net id="104"><net_src comp="76" pin="2"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="70" pin="2"/><net_sink comp="100" pin=1"/></net>

<net id="110"><net_src comp="76" pin="2"/><net_sink comp="106" pin=0"/></net>

<net id="111"><net_src comp="70" pin="2"/><net_sink comp="106" pin=1"/></net>

<net id="116"><net_src comp="76" pin="2"/><net_sink comp="112" pin=0"/></net>

<net id="117"><net_src comp="70" pin="2"/><net_sink comp="112" pin=1"/></net>

<net id="122"><net_src comp="100" pin="2"/><net_sink comp="118" pin=0"/></net>

<net id="123"><net_src comp="34" pin="0"/><net_sink comp="118" pin=1"/></net>

<net id="128"><net_src comp="96" pin="1"/><net_sink comp="124" pin=0"/></net>

<net id="129"><net_src comp="36" pin="0"/><net_sink comp="124" pin=1"/></net>

<net id="134"><net_src comp="124" pin="2"/><net_sink comp="130" pin=0"/></net>

<net id="135"><net_src comp="118" pin="2"/><net_sink comp="130" pin=1"/></net>

<net id="140"><net_src comp="96" pin="1"/><net_sink comp="136" pin=0"/></net>

<net id="141"><net_src comp="38" pin="0"/><net_sink comp="136" pin=1"/></net>

<net id="146"><net_src comp="96" pin="1"/><net_sink comp="142" pin=0"/></net>

<net id="147"><net_src comp="40" pin="0"/><net_sink comp="142" pin=1"/></net>

<net id="152"><net_src comp="96" pin="1"/><net_sink comp="148" pin=0"/></net>

<net id="153"><net_src comp="42" pin="0"/><net_sink comp="148" pin=1"/></net>

<net id="159"><net_src comp="148" pin="2"/><net_sink comp="154" pin=0"/></net>

<net id="160"><net_src comp="100" pin="2"/><net_sink comp="154" pin=1"/></net>

<net id="161"><net_src comp="106" pin="2"/><net_sink comp="154" pin=2"/></net>

<net id="166"><net_src comp="148" pin="2"/><net_sink comp="162" pin=0"/></net>

<net id="167"><net_src comp="142" pin="2"/><net_sink comp="162" pin=1"/></net>

<net id="173"><net_src comp="136" pin="2"/><net_sink comp="168" pin=0"/></net>

<net id="174"><net_src comp="112" pin="2"/><net_sink comp="168" pin=1"/></net>

<net id="175"><net_src comp="130" pin="2"/><net_sink comp="168" pin=2"/></net>

<net id="181"><net_src comp="162" pin="2"/><net_sink comp="176" pin=0"/></net>

<net id="182"><net_src comp="154" pin="3"/><net_sink comp="176" pin=1"/></net>

<net id="183"><net_src comp="168" pin="3"/><net_sink comp="176" pin=2"/></net>

<net id="184"><net_src comp="176" pin="3"/><net_sink comp="82" pin=2"/></net>

<net id="189"><net_src comp="58" pin="2"/><net_sink comp="185" pin=0"/></net>

<net id="190"><net_src comp="64" pin="2"/><net_sink comp="185" pin=1"/></net>

<net id="195"><net_src comp="64" pin="2"/><net_sink comp="191" pin=0"/></net>

<net id="196"><net_src comp="58" pin="2"/><net_sink comp="191" pin=1"/></net>

<net id="201"><net_src comp="58" pin="2"/><net_sink comp="197" pin=0"/></net>

<net id="202"><net_src comp="64" pin="2"/><net_sink comp="197" pin=1"/></net>

<net id="207"><net_src comp="58" pin="2"/><net_sink comp="203" pin=0"/></net>

<net id="208"><net_src comp="64" pin="2"/><net_sink comp="203" pin=1"/></net>

<net id="213"><net_src comp="185" pin="2"/><net_sink comp="209" pin=0"/></net>

<net id="214"><net_src comp="32" pin="0"/><net_sink comp="209" pin=1"/></net>

<net id="219"><net_src comp="64" pin="2"/><net_sink comp="215" pin=0"/></net>

<net id="220"><net_src comp="58" pin="2"/><net_sink comp="215" pin=1"/></net>

<net id="225"><net_src comp="96" pin="1"/><net_sink comp="221" pin=0"/></net>

<net id="226"><net_src comp="46" pin="0"/><net_sink comp="221" pin=1"/></net>

<net id="231"><net_src comp="96" pin="1"/><net_sink comp="227" pin=0"/></net>

<net id="232"><net_src comp="48" pin="0"/><net_sink comp="227" pin=1"/></net>

<net id="238"><net_src comp="142" pin="2"/><net_sink comp="233" pin=0"/></net>

<net id="239"><net_src comp="197" pin="2"/><net_sink comp="233" pin=1"/></net>

<net id="240"><net_src comp="203" pin="2"/><net_sink comp="233" pin=2"/></net>

<net id="245"><net_src comp="142" pin="2"/><net_sink comp="241" pin=0"/></net>

<net id="246"><net_src comp="136" pin="2"/><net_sink comp="241" pin=1"/></net>

<net id="252"><net_src comp="124" pin="2"/><net_sink comp="247" pin=0"/></net>

<net id="253"><net_src comp="209" pin="2"/><net_sink comp="247" pin=1"/></net>

<net id="254"><net_src comp="215" pin="2"/><net_sink comp="247" pin=2"/></net>

<net id="259"><net_src comp="124" pin="2"/><net_sink comp="255" pin=0"/></net>

<net id="260"><net_src comp="227" pin="2"/><net_sink comp="255" pin=1"/></net>

<net id="266"><net_src comp="221" pin="2"/><net_sink comp="261" pin=0"/></net>

<net id="267"><net_src comp="191" pin="2"/><net_sink comp="261" pin=1"/></net>

<net id="268"><net_src comp="185" pin="2"/><net_sink comp="261" pin=2"/></net>

<net id="274"><net_src comp="241" pin="2"/><net_sink comp="269" pin=0"/></net>

<net id="275"><net_src comp="233" pin="3"/><net_sink comp="269" pin=1"/></net>

<net id="276"><net_src comp="247" pin="3"/><net_sink comp="269" pin=2"/></net>

<net id="281"><net_src comp="241" pin="2"/><net_sink comp="277" pin=0"/></net>

<net id="282"><net_src comp="255" pin="2"/><net_sink comp="277" pin=1"/></net>

<net id="288"><net_src comp="277" pin="2"/><net_sink comp="283" pin=0"/></net>

<net id="289"><net_src comp="269" pin="3"/><net_sink comp="283" pin=1"/></net>

<net id="290"><net_src comp="261" pin="3"/><net_sink comp="283" pin=2"/></net>

<net id="291"><net_src comp="283" pin="3"/><net_sink comp="89" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: result_bool | {1 }
	Port: result_int | {1 }
 - Input state : 
	Port: wrapper_function : A_bool | {1 }
	Port: wrapper_function : B_bool | {1 }
	Port: wrapper_function : A_int | {1 }
	Port: wrapper_function : B_int | {1 }
	Port: wrapper_function : op | {1 }
  - Chain level:
	State 1
		icmp_ln5 : 1
		icmp_ln5_1 : 1
		icmp_ln5_2 : 1
		icmp_ln5_3 : 1
		select_ln5 : 2
		or_ln5 : 2
		select_ln5_2 : 1
		write_ln41 : 2
		icmp_ln21 : 1
		icmp_ln21_1 : 1
		select_ln21 : 2
		or_ln21 : 2
		or_ln21_1 : 2
		select_ln21_2 : 2
		select_ln21_3 : 1
		or_ln21_2 : 2
		select_ln21_4 : 2
		write_ln42 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|          |    select_ln5_fu_154   |    0    |    2    |
|          |   select_ln5_1_fu_168  |    0    |    2    |
|          |   select_ln5_2_fu_176  |    0    |    2    |
|  select  |   select_ln21_fu_233   |    0    |    32   |
|          |  select_ln21_1_fu_247  |    0    |    32   |
|          |  select_ln21_2_fu_261  |    0    |    32   |
|          |  select_ln21_3_fu_269  |    0    |    32   |
|          |  select_ln21_4_fu_283  |    0    |    32   |
|----------|------------------------|---------|---------|
|   ashr   |    ashr_ln33_fu_191    |    0    |   100   |
|----------|------------------------|---------|---------|
|    shl   |     shl_ln31_fu_215    |    0    |   100   |
|----------|------------------------|---------|---------|
|          |     xor_ln11_fu_112    |    0    |    2    |
|    xor   |     xor_ln13_fu_118    |    0    |    2    |
|          |     xor_ln27_fu_203    |    0    |    32   |
|          |     xor_ln29_fu_209    |    0    |    32   |
|----------|------------------------|---------|---------|
|          |     icmp_ln5_fu_124    |    0    |    10   |
|          |    icmp_ln5_1_fu_136   |    0    |    10   |
|   icmp   |    icmp_ln5_2_fu_142   |    0    |    10   |
|          |    icmp_ln5_3_fu_148   |    0    |    10   |
|          |    icmp_ln21_fu_221    |    0    |    10   |
|          |   icmp_ln21_1_fu_227   |    0    |    10   |
|----------|------------------------|---------|---------|
|          |      or_ln9_fu_106     |    0    |    2    |
|          |      or_ln5_fu_162     |    0    |    2    |
|    or    |     or_ln25_fu_197     |    0    |    32   |
|          |     or_ln21_fu_241     |    0    |    2    |
|          |    or_ln21_1_fu_255    |    0    |    2    |
|          |    or_ln21_2_fu_277    |    0    |    2    |
|----------|------------------------|---------|---------|
|          |     and_ln7_fu_100     |    0    |    2    |
|    and   |     and_ln5_fu_130     |    0    |    2    |
|          |     and_ln23_fu_185    |    0    |    32   |
|----------|------------------------|---------|---------|
|          |   op_read_read_fu_52   |    0    |    0    |
|          |  B_int_read_read_fu_58 |    0    |    0    |
|   read   |  A_int_read_read_fu_64 |    0    |    0    |
|          | B_bool_read_read_fu_70 |    0    |    0    |
|          | A_bool_read_read_fu_76 |    0    |    0    |
|----------|------------------------|---------|---------|
|   write  | write_ln41_write_fu_82 |    0    |    0    |
|          | write_ln42_write_fu_89 |    0    |    0    |
|----------|------------------------|---------|---------|
|   trunc  |    trunc_ln40_fu_96    |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |   572   |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   572  |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   572  |
+-----------+--------+--------+
