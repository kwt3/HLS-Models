

================================================================
== Vitis HLS Report for 'half_add_sub'
================================================================
* Date:           Fri Apr 19 21:35:28 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        alu_half_adder_bool
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.668 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+------+--------+--------+-----+
|       Name      | BRAM_18K|  DSP |   FF   |   LUT  | URAM|
+-----------------+---------+------+--------+--------+-----+
|DSP              |        -|     -|       -|       -|    -|
|Expression       |        -|     -|       0|       4|    -|
|FIFO             |        -|     -|       -|       -|    -|
|Instance         |        -|     -|       -|       -|    -|
|Memory           |        -|     -|       -|       -|    -|
|Multiplexer      |        -|     -|       -|      13|    -|
|Register         |        -|     -|       -|       -|    -|
+-----------------+---------+------+--------+--------+-----+
|Total            |        0|     0|       0|      17|    0|
+-----------------+---------+------+--------+--------+-----+
|Available        |     2060|  2800|  607200|  303600|    0|
+-----------------+---------+------+--------+--------+-----+
|Utilization (%)  |        0|     0|       0|      ~0|    0|
+-----------------+---------+------+--------+--------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +------------------+----------+----+---+----+------------+------------+
    |   Variable Name  | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +------------------+----------+----+---+----+------------+------------+
    |and_ln7_fu_76_p2  |       and|   0|  0|   2|           1|           1|
    |sum               |       xor|   0|  0|   2|           1|           1|
    +------------------+----------+----+---+----+------------+------------+
    |Total             |          |   0|  0|   4|           2|           2|
    +------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +-------+----+-----------+-----+-----------+
    |  Name | LUT| Input Size| Bits| Total Bits|
    +-------+----+-----------+-----+-----------+
    |carry  |  13|          3|    1|          3|
    +-------+----+-----------+-----+-----------+
    |Total  |  13|          3|    1|          3|
    +-------+----+-----------+-----+-----------+

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+--------------+-----+-----+------------+--------------------+--------------+
|   RTL Ports  | Dir | Bits|  Protocol  |    Source Object   |    C Type    |
+--------------+-----+-----+------------+--------------------+--------------+
|ap_start      |   in|    1|  ap_ctrl_hs|  half_add_sub<bool>|  return value|
|ap_done       |  out|    1|  ap_ctrl_hs|  half_add_sub<bool>|  return value|
|ap_idle       |  out|    1|  ap_ctrl_hs|  half_add_sub<bool>|  return value|
|ap_ready      |  out|    1|  ap_ctrl_hs|  half_add_sub<bool>|  return value|
|A             |   in|    1|     ap_none|                   A|        scalar|
|B             |   in|    1|     ap_none|                   B|        scalar|
|sum           |  out|    1|      ap_vld|                 sum|       pointer|
|sum_ap_vld    |  out|    1|      ap_vld|                 sum|       pointer|
|carry         |  out|    1|      ap_vld|               carry|       pointer|
|carry_ap_vld  |  out|    1|      ap_vld|               carry|       pointer|
|op            |   in|   32|     ap_none|                  op|        scalar|
+--------------+-----+-----+------------+--------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 1
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.66>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln4 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [alu_half_add-sub_bool.cpp:4]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %A"   --->   Operation 3 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %A, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %B"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %B, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %sum"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %sum, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %carry"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %carry, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %op"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %op, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%op_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op" [alu_half_add-sub_bool.cpp:4]   --->   Operation 13 'read' 'op_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%B_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %B" [alu_half_add-sub_bool.cpp:4]   --->   Operation 14 'read' 'B_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%A_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %A" [alu_half_add-sub_bool.cpp:4]   --->   Operation 15 'read' 'A_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.66ns)   --->   "%switch_ln5 = switch i32 %op_read, void %if.end, i32 0, void %if.then, i32 1, void %if.then6" [alu_half_add-sub_bool.cpp:5]   --->   Operation 16 'switch' 'switch_ln5' <Predicate = true> <Delay = 1.66>
ST_1 : Operation 17 [1/1] (0.61ns)   --->   "%xor_ln10 = xor i1 %A_read, i1 %B_read" [alu_half_add-sub_bool.cpp:10]   --->   Operation 17 'xor' 'xor_ln10' <Predicate = (op_read == 1)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%write_ln10 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %sum, i1 %xor_ln10" [alu_half_add-sub_bool.cpp:10]   --->   Operation 18 'write' 'write_ln10' <Predicate = (op_read == 1)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%write_ln11 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %carry, i1 1" [alu_half_add-sub_bool.cpp:11]   --->   Operation 19 'write' 'write_ln11' <Predicate = (op_read == 1)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln12 = br void %if.end" [alu_half_add-sub_bool.cpp:12]   --->   Operation 20 'br' 'br_ln12' <Predicate = (op_read == 1)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.61ns)   --->   "%xor_ln6 = xor i1 %A_read, i1 %B_read" [alu_half_add-sub_bool.cpp:6]   --->   Operation 21 'xor' 'xor_ln6' <Predicate = (op_read == 0)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%write_ln6 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %sum, i1 %xor_ln6" [alu_half_add-sub_bool.cpp:6]   --->   Operation 22 'write' 'write_ln6' <Predicate = (op_read == 0)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.61ns)   --->   "%and_ln7 = and i1 %A_read, i1 %B_read" [alu_half_add-sub_bool.cpp:7]   --->   Operation 23 'and' 'and_ln7' <Predicate = (op_read == 0)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%write_ln7 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %carry, i1 %and_ln7" [alu_half_add-sub_bool.cpp:7]   --->   Operation 24 'write' 'write_ln7' <Predicate = (op_read == 0)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln8 = br void %if.end15" [alu_half_add-sub_bool.cpp:8]   --->   Operation 25 'br' 'br_ln8' <Predicate = (op_read == 0)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end15"   --->   Operation 26 'br' 'br_ln0' <Predicate = (op_read != 0)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%ret_ln15 = ret" [alu_half_add-sub_bool.cpp:15]   --->   Operation 27 'ret' 'ret_ln15' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ A]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ B]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ sum]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
Port [ carry]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
Port [ op]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
spectopmodule_ln4 (spectopmodule) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
op_read           (read         ) [ 01]
B_read            (read         ) [ 00]
A_read            (read         ) [ 00]
switch_ln5        (switch       ) [ 00]
xor_ln10          (xor          ) [ 00]
write_ln10        (write        ) [ 00]
write_ln11        (write        ) [ 00]
br_ln12           (br           ) [ 00]
xor_ln6           (xor          ) [ 00]
write_ln6         (write        ) [ 00]
and_ln7           (and          ) [ 00]
write_ln7         (write        ) [ 00]
br_ln8            (br           ) [ 00]
br_ln0            (br           ) [ 00]
ret_ln15          (ret          ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="A">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="B">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="sum">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sum"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="carry">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="carry"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="op">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="op"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.i1P0A"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1004" name="op_read_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="32" slack="0"/>
<pin id="38" dir="0" index="1" bw="32" slack="0"/>
<pin id="39" dir="1" index="2" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="op_read/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="B_read_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="1" slack="0"/>
<pin id="44" dir="0" index="1" bw="1" slack="0"/>
<pin id="45" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="B_read/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="A_read_read_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="1" slack="0"/>
<pin id="50" dir="0" index="1" bw="1" slack="0"/>
<pin id="51" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="A_read/1 "/>
</bind>
</comp>

<comp id="54" class="1004" name="grp_write_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="0" slack="0"/>
<pin id="56" dir="0" index="1" bw="1" slack="0"/>
<pin id="57" dir="0" index="2" bw="1" slack="0"/>
<pin id="58" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln10/1 write_ln6/1 "/>
</bind>
</comp>

<comp id="61" class="1004" name="grp_write_fu_61">
<pin_list>
<pin id="62" dir="0" index="0" bw="0" slack="0"/>
<pin id="63" dir="0" index="1" bw="1" slack="0"/>
<pin id="64" dir="0" index="2" bw="1" slack="0"/>
<pin id="65" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln11/1 write_ln7/1 "/>
</bind>
</comp>

<comp id="69" class="1004" name="grp_fu_69">
<pin_list>
<pin id="70" dir="0" index="0" bw="1" slack="0"/>
<pin id="71" dir="0" index="1" bw="1" slack="0"/>
<pin id="72" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln10/1 xor_ln6/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="and_ln7_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="1" slack="0"/>
<pin id="78" dir="0" index="1" bw="1" slack="0"/>
<pin id="79" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln7/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="40"><net_src comp="26" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="8" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="28" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="2" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="52"><net_src comp="28" pin="0"/><net_sink comp="48" pin=0"/></net>

<net id="53"><net_src comp="0" pin="0"/><net_sink comp="48" pin=1"/></net>

<net id="59"><net_src comp="32" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="60"><net_src comp="4" pin="0"/><net_sink comp="54" pin=1"/></net>

<net id="66"><net_src comp="32" pin="0"/><net_sink comp="61" pin=0"/></net>

<net id="67"><net_src comp="6" pin="0"/><net_sink comp="61" pin=1"/></net>

<net id="68"><net_src comp="34" pin="0"/><net_sink comp="61" pin=2"/></net>

<net id="73"><net_src comp="48" pin="2"/><net_sink comp="69" pin=0"/></net>

<net id="74"><net_src comp="42" pin="2"/><net_sink comp="69" pin=1"/></net>

<net id="75"><net_src comp="69" pin="2"/><net_sink comp="54" pin=2"/></net>

<net id="80"><net_src comp="48" pin="2"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="42" pin="2"/><net_sink comp="76" pin=1"/></net>

<net id="82"><net_src comp="76" pin="2"/><net_sink comp="61" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: sum | {1 }
	Port: carry | {1 }
 - Input state : 
	Port: half_add_sub<bool> : A | {1 }
	Port: half_add_sub<bool> : B | {1 }
	Port: half_add_sub<bool> : op | {1 }
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------|---------|---------|
| Operation|   Functional Unit  |    FF   |   LUT   |
|----------|--------------------|---------|---------|
|    xor   |      grp_fu_69     |    0    |    2    |
|----------|--------------------|---------|---------|
|    and   |    and_ln7_fu_76   |    0    |    2    |
|----------|--------------------|---------|---------|
|          | op_read_read_fu_36 |    0    |    0    |
|   read   |  B_read_read_fu_42 |    0    |    0    |
|          |  A_read_read_fu_48 |    0    |    0    |
|----------|--------------------|---------|---------|
|   write  |   grp_write_fu_54  |    0    |    0    |
|          |   grp_write_fu_61  |    0    |    0    |
|----------|--------------------|---------|---------|
|   Total  |                    |    0    |    4    |
|----------|--------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|-----------------|------|------|------|--------||---------||---------|
|       Comp      |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------------|------|------|------|--------||---------||---------|
| grp_write_fu_61 |  p2  |   2  |   1  |    2   ||    9    |
|-----------------|------|------|------|--------||---------||---------|
|      Total      |      |      |      |    2   ||  1.038  ||    9    |
|-----------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |    4   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    1   |    -   |    9   |
|  Register |    -   |    -   |    -   |
+-----------+--------+--------+--------+
|   Total   |    1   |    0   |   13   |
+-----------+--------+--------+--------+
