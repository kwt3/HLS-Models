

================================================================
== Vitis HLS Report for 'two_complement_adder_Pipeline_VITIS_LOOP_8_1'
================================================================
* Date:           Mon Apr  1 07:18:03 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        two_complement_adder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.282 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       10|       10|  0.100 us|  0.100 us|   10|   10|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_8_1  |        8|        8|         1|          1|          1|     8|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.28>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10]   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%b_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %b_load"   --->   Operation 5 'read' 'b_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%a_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %a_load"   --->   Operation 6 'read' 'a_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.46ns)   --->   "%store_ln55 = store i4 7, i4 %i" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10]   --->   Operation 7 'store' 'store_ln55' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 8 [1/1] (0.46ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 8 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%carry = phi i1 %carry_1, void %for.inc.split, i1 0, void %newFuncRoot"   --->   Operation 9 'phi' 'carry' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i_2 = load i4 %i" [two_complement_adder.cpp:9]   --->   Operation 10 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %i_2, i32 3" [two_complement_adder.cpp:8]   --->   Operation 11 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln8 = br i1 %tmp, void %for.inc.split, void %for.end.exitStub" [two_complement_adder.cpp:8]   --->   Operation 12 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i4 %i_2" [two_complement_adder.cpp:8]   --->   Operation 13 'zext' 'zext_ln8' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specpipeline_ln7 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [two_complement_adder.cpp:7]   --->   Operation 14 'specpipeline' 'specpipeline_ln7' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%speclooptripcount_ln7 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [two_complement_adder.cpp:7]   --->   Operation 15 'speclooptripcount' 'speclooptripcount_ln7' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specloopname_ln8 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [two_complement_adder.cpp:8]   --->   Operation 16 'specloopname' 'specloopname_ln8' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln9 = trunc i4 %i_2" [two_complement_adder.cpp:9]   --->   Operation 17 'trunc' 'trunc_ln9' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i3 %trunc_ln9" [two_complement_adder.cpp:9]   --->   Operation 18 'zext' 'zext_ln9' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.79ns)   --->   "%lshr_ln9 = lshr i8 %a_load_read, i8 %zext_ln9" [two_complement_adder.cpp:9]   --->   Operation 19 'lshr' 'lshr_ln9' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln9_1 = trunc i8 %lshr_ln9" [two_complement_adder.cpp:9]   --->   Operation 20 'trunc' 'trunc_ln9_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.79ns)   --->   "%lshr_ln9_1 = lshr i8 %b_load_read, i8 %zext_ln9" [two_complement_adder.cpp:9]   --->   Operation 21 'lshr' 'lshr_ln9_1' <Predicate = (!tmp)> <Delay = 0.79> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln9_2 = trunc i8 %lshr_ln9_1" [two_complement_adder.cpp:9]   --->   Operation 22 'trunc' 'trunc_ln9_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.14ns)   --->   "%xor_ln9 = xor i1 %trunc_ln9_1, i1 %trunc_ln9_2" [two_complement_adder.cpp:9]   --->   Operation 23 'xor' 'xor_ln9' <Predicate = (!tmp)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.14ns)   --->   "%sum_bit = xor i1 %xor_ln9, i1 %carry" [two_complement_adder.cpp:9]   --->   Operation 24 'xor' 'sum_bit' <Predicate = (!tmp)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%temp_sum_addr = getelementptr i1 %temp_sum, i64 0, i64 %zext_ln8" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:56->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10]   --->   Operation 25 'getelementptr' 'temp_sum_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.73ns)   --->   "%store_ln10 = store i1 %sum_bit, i4 %temp_sum_addr" [two_complement_adder.cpp:10]   --->   Operation 26 'store' 'store_ln10' <Predicate = (!tmp)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 9> <RAM>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%and_ln11 = and i1 %trunc_ln9_1, i1 %trunc_ln9_2" [two_complement_adder.cpp:11]   --->   Operation 27 'and' 'and_ln11' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%and_ln11_1 = and i1 %xor_ln9, i1 %carry" [two_complement_adder.cpp:11]   --->   Operation 28 'and' 'and_ln11_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.14ns) (out node of the LUT)   --->   "%carry_1 = or i1 %and_ln11_1, i1 %and_ln11" [two_complement_adder.cpp:11]   --->   Operation 29 'or' 'carry_1' <Predicate = (!tmp)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.80ns)   --->   "%add_ln8 = add i4 %i_2, i4 15" [two_complement_adder.cpp:8]   --->   Operation 30 'add' 'add_ln8' <Predicate = (!tmp)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.46ns)   --->   "%store_ln55 = store i4 %add_ln8, i4 %i" [C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10]   --->   Operation 31 'store' 'store_ln55' <Predicate = (!tmp)> <Delay = 0.46>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln8 = br void %for.inc" [two_complement_adder.cpp:8]   --->   Operation 32 'br' 'br_ln8' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%write_ln11 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %carry_out, i1 %carry" [two_complement_adder.cpp:11]   --->   Operation 33 'write' 'write_ln11' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 34 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.282ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln55', C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10) of constant 7 on local variable '__n', C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10 [8]  (0.460 ns)
	'load' operation 4 bit ('i', two_complement_adder.cpp:9) on local variable '__n', C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:55->C:/Xilinx/Vitis_HLS/2023.2/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186->two_complement_adder.cpp:10 [12]  (0.000 ns)
	'lshr' operation 8 bit ('lshr_ln9_1', two_complement_adder.cpp:9) [24]  (0.796 ns)
	'xor' operation 1 bit ('xor_ln9', two_complement_adder.cpp:9) [26]  (0.148 ns)
	'xor' operation 1 bit ('sum_bit', two_complement_adder.cpp:9) [27]  (0.148 ns)
	'store' operation 0 bit ('store_ln10', two_complement_adder.cpp:10) of variable 'sum_bit', two_complement_adder.cpp:9 on array 'temp_sum' [29]  (0.730 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
