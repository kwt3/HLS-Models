

================================================================
== Vitis HLS Report for 'increment'
================================================================
* Date:           Sun Jun  2 23:45:39 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        4digit_decimalcounter
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.792 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.79>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [counter.cpp:3]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %reset"   --->   Operation 3 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %reset, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %out_r"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i4 %out_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %max_count"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %max_count, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%max_count_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %max_count" [counter.cpp:3]   --->   Operation 9 'read' 'max_count_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%reset_read = read i1 @_ssdm_op_Read.ap_auto.i1P0A, i1 %reset" [counter.cpp:7]   --->   Operation 10 'read' 'reset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln7 = br i1 %reset_read, void %if.else, void %if.then" [counter.cpp:7]   --->   Operation 11 'br' 'br_ln7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%count_load = load i32 %count" [counter.cpp:10]   --->   Operation 12 'load' 'count_load' <Predicate = (!reset_read)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.14ns)   --->   "%icmp_ln10 = icmp_eq  i32 %count_load, i32 %max_count_read" [counter.cpp:10]   --->   Operation 13 'icmp' 'icmp_ln10' <Predicate = (!reset_read)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %icmp_ln10, void %if.else5, void %if.then2" [counter.cpp:10]   --->   Operation 14 'br' 'br_ln10' <Predicate = (!reset_read)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.14ns)   --->   "%add_ln13 = add i32 %count_load, i32 1" [counter.cpp:13]   --->   Operation 15 'add' 'add_ln13' <Predicate = (!reset_read & !icmp_ln10)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln13 = trunc i32 %add_ln13" [counter.cpp:13]   --->   Operation 16 'trunc' 'trunc_ln13' <Predicate = (!reset_read & !icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.50ns)   --->   "%store_ln13 = store i32 %add_ln13, i32 %count" [counter.cpp:13]   --->   Operation 17 'store' 'store_ln13' <Predicate = (!reset_read & !icmp_ln10)> <Delay = 0.50>
ST_1 : Operation 18 [1/1] (0.50ns)   --->   "%br_ln0 = br void %if.end6"   --->   Operation 18 'br' 'br_ln0' <Predicate = (!reset_read & !icmp_ln10)> <Delay = 0.50>
ST_1 : Operation 19 [1/1] (1.14ns)   --->   "%icmp_ln11 = icmp_eq  i32 %max_count_read, i32 12" [counter.cpp:11]   --->   Operation 19 'icmp' 'icmp_ln11' <Predicate = (!reset_read & icmp_ln10)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i1 %icmp_ln11" [counter.cpp:11]   --->   Operation 20 'zext' 'zext_ln11' <Predicate = (!reset_read & icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln11_1 = zext i1 %icmp_ln11" [counter.cpp:11]   --->   Operation 21 'zext' 'zext_ln11_1' <Predicate = (!reset_read & icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.50ns)   --->   "%store_ln11 = store i32 %zext_ln11, i32 %count" [counter.cpp:11]   --->   Operation 22 'store' 'store_ln11' <Predicate = (!reset_read & icmp_ln10)> <Delay = 0.50>
ST_1 : Operation 23 [1/1] (0.50ns)   --->   "%br_ln12 = br void %if.end6" [counter.cpp:12]   --->   Operation 23 'br' 'br_ln12' <Predicate = (!reset_read & icmp_ln10)> <Delay = 0.50>
ST_1 : Operation 24 [1/1] (1.14ns)   --->   "%icmp_ln8 = icmp_eq  i32 %max_count_read, i32 12" [counter.cpp:8]   --->   Operation 24 'icmp' 'icmp_ln8' <Predicate = (reset_read)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i1 %icmp_ln8" [counter.cpp:8]   --->   Operation 25 'zext' 'zext_ln8' <Predicate = (reset_read)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i1 %icmp_ln8" [counter.cpp:8]   --->   Operation 26 'zext' 'zext_ln8_1' <Predicate = (reset_read)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.50ns)   --->   "%store_ln8 = store i32 %zext_ln8, i32 %count" [counter.cpp:8]   --->   Operation 27 'store' 'store_ln8' <Predicate = (reset_read)> <Delay = 0.50>
ST_1 : Operation 28 [1/1] (0.50ns)   --->   "%br_ln9 = br void %if.end6" [counter.cpp:9]   --->   Operation 28 'br' 'br_ln9' <Predicate = (reset_read)> <Delay = 0.50>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%phi_ln18 = phi i4 %zext_ln8_1, void %if.then, i4 %trunc_ln13, void %if.else5, i4 %zext_ln11_1, void %if.then2" [counter.cpp:18]   --->   Operation 29 'phi' 'phi_ln18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%write_ln18 = write void @_ssdm_op_Write.ap_auto.i4P0A, i4 %out_r, i4 %phi_ln18" [counter.cpp:18]   --->   Operation 30 'write' 'write_ln18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%ret_ln19 = ret" [counter.cpp:19]   --->   Operation 31 'ret' 'ret_ln19' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.792ns
The critical path consists of the following:
	wire read operation ('max_count_read', counter.cpp:3) on port 'max_count' (counter.cpp:3) [12]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln11', counter.cpp:11) [25]  (1.142 ns)
	multiplexor before 'phi' operation 4 bit ('phi_ln18', counter.cpp:18) with incoming values : ('trunc_ln13', counter.cpp:13) ('zext_ln11_1', counter.cpp:11) ('zext_ln8_1', counter.cpp:8) [37]  (0.502 ns)
	'phi' operation 4 bit ('phi_ln18', counter.cpp:18) with incoming values : ('trunc_ln13', counter.cpp:13) ('zext_ln11_1', counter.cpp:11) ('zext_ln8_1', counter.cpp:8) [37]  (0.000 ns)
	blocking operation 0.148 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
