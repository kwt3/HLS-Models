

================================================================
== Vitis HLS Report for 'clock'
================================================================
* Date:           Mon Mar 25 04:47:05 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        12hour_clock
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.286 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.28>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [clock.cpp:3]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %reset"   --->   Operation 3 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %reset, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %ena"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %ena, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %hh"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %hh, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %mm"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %mm, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ss"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ss, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %pm"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %pm, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%reset_read = read i1 @_ssdm_op_Read.ap_auto.i1P0A, i1 %reset" [clock.cpp:11]   --->   Operation 15 'read' 'reset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%hours_load = load i8 %hours" [clock.cpp:24]   --->   Operation 16 'load' 'hours_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%minutes_load = load i8 %minutes" [clock.cpp:21]   --->   Operation 17 'load' 'minutes_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%seconds_load = load i8 %seconds" [clock.cpp:18]   --->   Operation 18 'load' 'seconds_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%pm_indicator_load = load i1 %pm_indicator" [clock.cpp:28]   --->   Operation 19 'load' 'pm_indicator_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln11 = br i1 %reset_read, void %if.else, void %if.then" [clock.cpp:11]   --->   Operation 20 'br' 'br_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%ena_read = read i1 @_ssdm_op_Read.ap_auto.i1P0A, i1 %ena" [clock.cpp:16]   --->   Operation 21 'read' 'ena_read' <Predicate = (!reset_read)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.54ns)   --->   "%br_ln16 = br i1 %ena_read, void %if.end35, void %if.then14" [clock.cpp:16]   --->   Operation 22 'br' 'br_ln16' <Predicate = (!reset_read)> <Delay = 0.54>
ST_1 : Operation 23 [1/1] (0.87ns)   --->   "%add_ln18 = add i8 %seconds_load, i8 1" [clock.cpp:18]   --->   Operation 23 'add' 'add_ln18' <Predicate = (!reset_read & ena_read)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.87ns)   --->   "%icmp_ln19 = icmp_eq  i8 %add_ln18, i8 60" [clock.cpp:19]   --->   Operation 24 'icmp' 'icmp_ln19' <Predicate = (!reset_read & ena_read)> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.54ns)   --->   "%br_ln19 = br i1 %icmp_ln19, void %if.end35, void %if.then16" [clock.cpp:19]   --->   Operation 25 'br' 'br_ln19' <Predicate = (!reset_read & ena_read)> <Delay = 0.54>
ST_1 : Operation 26 [1/1] (0.87ns)   --->   "%add_ln21 = add i8 %minutes_load, i8 1" [clock.cpp:21]   --->   Operation 26 'add' 'add_ln21' <Predicate = (!reset_read & ena_read & icmp_ln19)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.87ns)   --->   "%icmp_ln22 = icmp_eq  i8 %add_ln21, i8 60" [clock.cpp:22]   --->   Operation 27 'icmp' 'icmp_ln22' <Predicate = (!reset_read & ena_read & icmp_ln19)> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.54ns)   --->   "%br_ln22 = br i1 %icmp_ln22, void %if.end35, void %if.then20" [clock.cpp:22]   --->   Operation 28 'br' 'br_ln22' <Predicate = (!reset_read & ena_read & icmp_ln19)> <Delay = 0.54>
ST_1 : Operation 29 [1/1] (0.87ns)   --->   "%add_ln24 = add i8 %hours_load, i8 1" [clock.cpp:24]   --->   Operation 29 'add' 'add_ln24' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.90ns)   --->   "%switch_ln25 = switch i8 %hours_load, void %if.end, i8 12, void %if.end35, i8 11, void %if.then28" [clock.cpp:25]   --->   Operation 30 'switch' 'switch_ln25' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22)> <Delay = 0.90>
ST_1 : Operation 31 [1/1] (0.14ns)   --->   "%xor_ln28 = xor i1 %pm_indicator_load, i1 1" [clock.cpp:28]   --->   Operation 31 'xor' 'xor_ln28' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22 & hours_load == 11)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.46ns)   --->   "%store_ln28 = store i1 %xor_ln28, i1 %pm_indicator" [clock.cpp:28]   --->   Operation 32 'store' 'store_ln28' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22 & hours_load == 11)> <Delay = 0.46>
ST_1 : Operation 33 [1/1] (0.46ns)   --->   "%br_ln29 = br void %if.end" [clock.cpp:29]   --->   Operation 33 'br' 'br_ln29' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22 & hours_load == 11)> <Delay = 0.46>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%pm_indicator_loc_0 = phi i1 %pm_indicator_load, void %if.then20, i1 %xor_ln28, void %if.then28" [clock.cpp:28]   --->   Operation 34 'phi' 'pm_indicator_loc_0' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22 & hours_load != 12)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.54ns)   --->   "%br_ln0 = br void %if.end35"   --->   Operation 35 'br' 'br_ln0' <Predicate = (!reset_read & ena_read & icmp_ln19 & icmp_ln22 & hours_load != 12)> <Delay = 0.54>
ST_1 : Operation 36 [1/1] (0.46ns)   --->   "%store_ln15 = store i1 0, i1 %pm_indicator" [clock.cpp:15]   --->   Operation 36 'store' 'store_ln15' <Predicate = (reset_read)> <Delay = 0.46>
ST_1 : Operation 37 [1/1] (0.54ns)   --->   "%br_ln16 = br void %if.end35" [clock.cpp:16]   --->   Operation 37 'br' 'br_ln16' <Predicate = (reset_read)> <Delay = 0.54>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%hours_flag_4 = phi i1 1, void %if.then, i1 0, void %if.else, i1 0, void %if.then14, i1 0, void %if.then16, i1 1, void %if.then20, i1 1, void %if.end"   --->   Operation 38 'phi' 'hours_flag_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%hours_new_4 = phi i8 12, void %if.then, i8 %hours_load, void %if.else, i8 %hours_load, void %if.then14, i8 %hours_load, void %if.then16, i8 1, void %if.then20, i8 %add_ln24, void %if.end" [clock.cpp:24]   --->   Operation 39 'phi' 'hours_new_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%minutes_flag_3 = phi i1 1, void %if.then, i1 0, void %if.else, i1 0, void %if.then14, i1 1, void %if.then16, i1 1, void %if.then20, i1 1, void %if.end"   --->   Operation 40 'phi' 'minutes_flag_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%minutes_new_3 = phi i8 0, void %if.then, i8 %minutes_load, void %if.else, i8 %minutes_load, void %if.then14, i8 %add_ln21, void %if.then16, i8 0, void %if.then20, i8 0, void %if.end" [clock.cpp:21]   --->   Operation 41 'phi' 'minutes_new_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%seconds_flag_2 = phi i1 1, void %if.then, i1 0, void %if.else, i1 1, void %if.then14, i1 1, void %if.then16, i1 1, void %if.then20, i1 1, void %if.end"   --->   Operation 42 'phi' 'seconds_flag_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%seconds_new_2 = phi i8 0, void %if.then, i8 %seconds_load, void %if.else, i8 %add_ln18, void %if.then14, i8 0, void %if.then16, i8 0, void %if.then20, i8 0, void %if.end" [clock.cpp:18]   --->   Operation 43 'phi' 'seconds_new_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%pm_indicator_loc_5 = phi i1 0, void %if.then, i1 %pm_indicator_load, void %if.else, i1 %pm_indicator_load, void %if.then14, i1 %pm_indicator_load, void %if.then16, i1 %pm_indicator_load, void %if.then20, i1 %pm_indicator_loc_0, void %if.end" [clock.cpp:28]   --->   Operation 44 'phi' 'pm_indicator_loc_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%write_ln35 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %hh, i8 %hours_new_4" [clock.cpp:35]   --->   Operation 45 'write' 'write_ln35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%write_ln36 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %mm, i8 %minutes_new_3" [clock.cpp:36]   --->   Operation 46 'write' 'write_ln36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%write_ln37 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %ss, i8 %seconds_new_2" [clock.cpp:37]   --->   Operation 47 'write' 'write_ln37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%write_ln38 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %pm, i1 %pm_indicator_loc_5" [clock.cpp:38]   --->   Operation 48 'write' 'write_ln38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %seconds_flag_2, void %if.end35.new4, void %mergeST3"   --->   Operation 49 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%store_ln14 = store i8 %seconds_new_2, i8 %seconds" [clock.cpp:14]   --->   Operation 50 'store' 'store_ln14' <Predicate = (seconds_flag_2)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end35.new4"   --->   Operation 51 'br' 'br_ln0' <Predicate = (seconds_flag_2)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %minutes_flag_3, void %if.end35.new2, void %mergeST1"   --->   Operation 52 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%store_ln13 = store i8 %minutes_new_3, i8 %minutes" [clock.cpp:13]   --->   Operation 53 'store' 'store_ln13' <Predicate = (minutes_flag_3)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end35.new2"   --->   Operation 54 'br' 'br_ln0' <Predicate = (minutes_flag_3)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %hours_flag_4, void %if.end35.new, void %mergeST"   --->   Operation 55 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%store_ln12 = store i8 %hours_new_4, i8 %hours" [clock.cpp:12]   --->   Operation 56 'store' 'store_ln12' <Predicate = (hours_flag_4)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end35.new"   --->   Operation 57 'br' 'br_ln0' <Predicate = (hours_flag_4)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%ret_ln39 = ret" [clock.cpp:39]   --->   Operation 58 'ret' 'ret_ln39' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.286ns
The critical path consists of the following:
	'load' operation 8 bit ('minutes_load', clock.cpp:21) on static variable 'minutes' [26]  (0.000 ns)
	'add' operation 8 bit ('add_ln21', clock.cpp:21) [38]  (0.871 ns)
	'icmp' operation 1 bit ('icmp_ln22', clock.cpp:22) [39]  (0.871 ns)
	multiplexor before 'phi' operation 1 bit ('minutes_flag_3') [57]  (0.544 ns)
	'phi' operation 1 bit ('minutes_flag_3') [57]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
